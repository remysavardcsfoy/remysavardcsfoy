"use strict";(self.webpackChunkreact=self.webpackChunkreact||[]).push([[9721],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=s(n),u=a,h=m["".concat(p,".").concat(u)]||m[u]||d[u]||o;return n?r.createElement(h,i(i({ref:t},c),{},{components:n})):r.createElement(h,i({ref:t},c))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[m]="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},9311:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const o={title:"Lab 16: Form Validation"},i=void 0,l={unversionedId:"labs/js/FormValidation",id:"labs/js/FormValidation",title:"Lab 16: Form Validation",description:"Objectives",source:"@site/docs/labs/js/16-FormValidation.md",sourceDirName:"labs/js",slug:"/labs/js/FormValidation",permalink:"/docs/labs/js/FormValidation",draft:!1,tags:[],version:"current",sidebarPosition:16,frontMatter:{title:"Lab 16: Form Validation"}},p={},s=[{value:"Objectives",id:"objectives",level:2},{value:"Steps",id:"steps",level:2},{value:"Add Form Validation",id:"add-form-validation",level:3},{value:"\u2714 You have completed Lab 16",id:"-you-have-completed-lab-16",level:3}],c={toc:s},m="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"objectives"},"Objectives"),(0,a.kt)("ul",{className:"contains-task-list"},(0,a.kt)("li",{parentName:"ul",className:"task-list-item"},(0,a.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Add Form Validation")),(0,a.kt)("h2",{id:"steps"},"Steps"),(0,a.kt)("h3",{id:"add-form-validation"},"Add Form Validation"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Open")," the file ",(0,a.kt)("inlineCode",{parentName:"p"},"src\\project\\ProjectForm.js"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Initialize")," an ",(0,a.kt)("inlineCode",{parentName:"p"},"errors")," object as a state variable to ",(0,a.kt)("inlineCode",{parentName:"p"},"{name: '', description: '', budget: ''}")," so we can hold form errors in the component's ",(0,a.kt)("inlineCode",{parentName:"p"},"state"),"."),(0,a.kt)("h4",{parentName:"li",id:"srcprojectsprojectformjs"},(0,a.kt)("inlineCode",{parentName:"h4"},"src\\projects\\ProjectForm.js")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-diff"},"...\n\nfunction ProjectForm({\n  project: initialProject,\n  onSave,\n  onCancel,\n}) {\n  const [project, setProject] = useState(initialProject);\n+ const [errors, setErrors] = useState({\n+   name: '',\n+   description: '',\n+   budget: '',\n+ });\n\n...\n\n}\n...\nexport default ProjectForm;\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Implement")," a ",(0,a.kt)("inlineCode",{parentName:"p"},"validate")," function in the ",(0,a.kt)("inlineCode",{parentName:"p"},"ProjectForm")," component that meets these ",(0,a.kt)("strong",{parentName:"p"},"requirements"),"."),(0,a.kt)("ol",{parentName:"li"},(0,a.kt)("li",{parentName:"ol"},"Name is required."),(0,a.kt)("li",{parentName:"ol"},"Name needs to be at least 3 characters long."),(0,a.kt)("li",{parentName:"ol"},"Description is required."),(0,a.kt)("li",{parentName:"ol"},"Budget must be greater than \\$0.")),(0,a.kt)("p",{parentName:"li"},"Also, ",(0,a.kt)("strong",{parentName:"p"},"implement")," an ",(0,a.kt)("inlineCode",{parentName:"p"},"isValid")," function in the ",(0,a.kt)("inlineCode",{parentName:"p"},"ProjectForm")," component that checks whether there are any validation errors."),(0,a.kt)("h4",{parentName:"li",id:"srcprojectsprojectformjs-1"},(0,a.kt)("inlineCode",{parentName:"h4"},"src\\projects\\ProjectForm.js")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-diff"},"...\nfunction ProjectForm({\n  project: initialProject,\n  onSave,\n  onCancel,\n}) {\n  const [project, setProject] = useState(initialProject);\n  const [errors, setErrors] = useState({\n    name: '',\n    description: '',\n    budget: '',\n  });\n\n  const handleChange = (event) => {\n    ...\n  };\n\n+  function validate(project) {\n+    let errors = { name: '', description: '', budget: '' };\n+    if (project.name.length === 0) {\n+      errors.name = 'Name is required';\n+    }\n+    if (project.name.length > 0 && project.name.length < 3) {\n+      errors.name = 'Name needs to be at least 3 characters.';\n+    }\n+    if (project.description.length === 0) {\n+      errors.description = 'Description is required.';\n+    }\n+    if (project.budget === 0) {\n+      errors.budget = 'Budget must be more than $0.';\n+    }\n+    return errors;\n+  }\n\n+  function isValid() {\n+    return (\n+      errors.name.length === 0 &&\n+      errors.description.length === 0 &&\n+      errors.budget.length === 0\n+    );\n+  }\n\n  return (\n    ...\n  );\n}\n...\nexport default ProjectForm;\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Call the ",(0,a.kt)("inlineCode",{parentName:"p"},"validate")," function inside ",(0,a.kt)("inlineCode",{parentName:"p"},"handleChange")," to determine if there are any errors and then set them into the ",(0,a.kt)("inlineCode",{parentName:"p"},"errors")," state variable."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-diff"},"...\nfunction ProjectForm({\n  project: initialProject,\n  onSave,\n  onCancel,\n}) {\n...\n  const handleChange = (event) => {\n    const { type, name, value, checked } = event.target;\n    // if input type is checkbox use checked\n    // otherwise it's type is text, number etc. so use value\n    let updatedValue = type === 'checkbox' ? checked : value;\n\n    //if input type is number convert the updatedValue string to a number\n    if (type === 'number') {\n      updatedValue = Number(updatedValue);\n    }\n    const change = {\n      [name]: updatedValue,\n    };\n\n    let updatedProject;\n    // need to do functional update b/c\n    // the new project state is based on the previous project state\n    // so we can keep the project properties that aren't being edited like project.id\n    // the spread operator (...) is used to\n    // spread the previous project properties and the new change\n    setProject((p) => {\n      updatedProject = new Project({ ...p, ...change });\n      return updatedProject;\n    });\n+    setErrors(() => validate(updatedProject));\n  };\n\n  return (\n    ...\n  );\n}\n...\nexport default ProjectForm;\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Call")," the ",(0,a.kt)("inlineCode",{parentName:"p"},"isValid")," function on form submit and return back out of the function before saving changes if the form is invalid."),(0,a.kt)("h4",{parentName:"li",id:"srcprojectsprojectformjs-2"},(0,a.kt)("inlineCode",{parentName:"h4"},"src\\projects\\ProjectForm.js")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-diff"},"...\nfunction ProjectForm({\n  project: initialProject,\n  onSave,\n  onCancel,\n}) {\n...\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n+    if (!isValid()) return;\n    onSave(project);\n  };\n\n...\n\n  return (\n    ...\n  );\n}\n...\nexport default ProjectForm;\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"In the JSX returned by the component: ",(0,a.kt)("strong",{parentName:"p"},"display")," the ",(0,a.kt)("strong",{parentName:"p"},"validation messages")," ",(0,a.kt)("strong",{parentName:"p"},"using")," the following ",(0,a.kt)("inlineCode",{parentName:"p"},"HTML")," template."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-html"},'<div class="card error">\n  <p>error message</p>\n</div>\n')),(0,a.kt)("h4",{parentName:"li",id:"srcprojectsprojectformjs-3"},(0,a.kt)("inlineCode",{parentName:"h4"},"src\\projects\\ProjectForm.js")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-diff"},'...\nfunction ProjectForm({\n  project: initialProject,\n  onSave,\n  onCancel,\n}) {\n  const [project, setProject] = useState(initialProject);\n  const [errors, setErrors] = useState({\n    name: \'\',\n    description: \'\',\n    budget: \'\',\n  });\n  ...\n\n  return (\n    <form className="input-group vertical" onSubmit={handleSubmit}>\n      <label htmlFor="name">Project Name</label>\n      <input\n        type="text"\n        name="name"\n        placeholder="enter name"\n        value={project.name}\n        onChange={handleChange}\n      />\n+      {errors.name.length > 0 && (\n+        <div className="card error">\n+          <p>{errors.name}</p>\n+        </div>\n+      )}\n\n      <label htmlFor="description">Project Description</label>\n      <textarea\n        name="description"\n        placeholder="enter description"\n        value={project.description}\n        onChange={handleChange}\n      />\n+      {errors.description.length > 0 && (\n+        <div className="card error">\n+          <p>{errors.description}</p>\n+        </div>\n+      )}\n\n      <label htmlFor="budget">Project Budget</label>\n      <input\n        type="number"\n        name="budget"\n        placeholder="enter budget"\n        value={project.budget}\n        onChange={handleChange}\n      />\n+      {errors.budget.length > 0 && (\n+        <div className="card error">\n+          <p>{errors.budget}</p>\n+        </div>\n+      )}\n\n      <label htmlFor="isActive">Active?</label>\n      <input\n        type="checkbox"\n        name="isActive"\n        checked={project.isActive}\n        onChange={handleChange}\n      />\n      <div className="input-group">\n        <button className="primary bordered medium">Save</button>\n        <span />\n        <button type="button" className="bordered medium" onClick={onCancel}>\n          cancel\n        </button>\n      </div>\n    </form>\n  );\n}\n...\nexport default ProjectForm;\n'))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Verify")," the application is working by ",(0,a.kt)("strong",{parentName:"p"},"following these steps"),"."),(0,a.kt)("ol",{parentName:"li"},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Click")," the ",(0,a.kt)("strong",{parentName:"li"},"edit")," ",(0,a.kt)("strong",{parentName:"li"},"button")," on any project."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Delete")," the contents of the ",(0,a.kt)("strong",{parentName:"li"},"project name")," textbox."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Verify")," the ",(0,a.kt)("strong",{parentName:"li"},"error message")," displays."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},"Test")," the ",(0,a.kt)("strong",{parentName:"li"},"other")," validation rules.")))),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"-you-have-completed-lab-16"},"\u2714"," You have completed Lab 16"))}d.isMDXComponent=!0}}]);