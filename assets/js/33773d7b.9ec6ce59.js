"use strict";(self.webpackChunkreact=self.webpackChunkreact||[]).push([[2568],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>k});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var i=n.createContext({}),l=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},c=function(e){var t=l(e.components);return n.createElement(i.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),m=l(r),u=a,k=m["".concat(i,".").concat(u)]||m[u]||d[u]||o;return r?n.createElement(k,s(s({ref:t},c),{},{components:r})):n.createElement(k,s({ref:t},c))}));function k(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,s=new Array(o);s[0]=u;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p[m]="string"==typeof e?e:a,s[1]=p;for(var l=2;l<o;l++)s[l]=r[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}u.displayName="MDXCreateElement"},3176:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>p,toc:()=>l});var n=r(7462),a=(r(7294),r(3905));const o={title:"Testing Lab 5: Container Components"},s=void 0,p={unversionedId:"labs/ts/T5-ContainerComponents",id:"labs/ts/T5-ContainerComponents",title:"Testing Lab 5: Container Components",description:"Objectives",source:"@site/docs/labs/ts/T5-ContainerComponents.md",sourceDirName:"labs/ts",slug:"/labs/ts/T5-ContainerComponents",permalink:"/docs/labs/ts/T5-ContainerComponents",draft:!1,tags:[],version:"current",frontMatter:{title:"Testing Lab 5: Container Components"}},i={},l=[{value:"Objectives",id:"objectives",level:2},{value:"Steps",id:"steps",level:2},{value:"Test Setup",id:"test-setup",level:3},{value:"Test the Loading Indicator Displays",id:"test-the-loading-indicator-displays",level:3},{value:"Test the Projects Display",id:"test-the-projects-display",level:3},{value:"Test the More Button Displays",id:"test-the-more-button-displays",level:3},{value:"Test the Error Displays",id:"test-the-error-displays",level:3},{value:"\u2714 You have completed Testing Lab 5",id:"-you-have-completed-testing-lab-5",level:3}],c={toc:l},m="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(m,(0,n.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"objectives"},"Objectives"),(0,a.kt)("ul",{className:"contains-task-list"},(0,a.kt)("li",{parentName:"ul",className:"task-list-item"},(0,a.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Test Setup"),(0,a.kt)("li",{parentName:"ul",className:"task-list-item"},(0,a.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Test the Loading Indicator Displays"),(0,a.kt)("li",{parentName:"ul",className:"task-list-item"},(0,a.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Test the Projects Display"),(0,a.kt)("li",{parentName:"ul",className:"task-list-item"},(0,a.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Test the More Button Displays"),(0,a.kt)("li",{parentName:"ul",className:"task-list-item"},(0,a.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Test the Error Displays")),(0,a.kt)("h2",{id:"steps"},"Steps"),(0,a.kt)("h3",{id:"test-setup"},"Test Setup"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Create")," the ",(0,a.kt)("strong",{parentName:"p"},"file")," ",(0,a.kt)("inlineCode",{parentName:"p"},"src\\projects\\__tests__\\ProjectsPage-test.tsx"),".")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Add")," the ",(0,a.kt)("strong",{parentName:"p"},"setup")," code below to test the component."),(0,a.kt)("h4",{parentName:"li",id:"srcprojects__tests__projectspage-testtsx"},(0,a.kt)("inlineCode",{parentName:"h4"},"src\\projects\\__tests__\\ProjectsPage-test.tsx")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'import React from "react";\nimport { MemoryRouter } from "react-router-dom";\nimport { Provider } from "react-redux";\nimport { store } from "../../state";\nimport ProjectsPage from "../ProjectsPage";\nimport {\n  render,\n  screen,\n  waitForElementToBeRemoved,\n} from "@testing-library/react";\n\ndescribe("<ProjectsPage />", () => {\n  function renderComponent() {\n    render(\n      <Provider store={store}>\n        <MemoryRouter>\n          <ProjectsPage />\n        </MemoryRouter>\n      </Provider>\n    );\n  }\n\n  test("should render without crashing", () => {\n    renderComponent();\n    expect(screen).toBeDefined();\n  });\n});\n'))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Verify")," the initial ",(0,a.kt)("strong",{parentName:"p"},"test passed"),"."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"PASS  src/projects/__tests__/ProjectsPage-test.tsx\n")),(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"! Check to make sure the ",(0,a.kt)("inlineCode",{parentName:"p"},"delay")," function used to delay the backend query and display the loading indicator has been removed in ",(0,a.kt)("inlineCode",{parentName:"p"},"projectAPI.ts"),". The delay call causes the ",(0,a.kt)("inlineCode",{parentName:"p"},"msw")," library to throw an error.")))),(0,a.kt)("h3",{id:"test-the-loading-indicator-displays"},"Test the Loading Indicator Displays"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Test that the loading indicator displays when the component initially renders."),(0,a.kt)("h4",{parentName:"li",id:"srcprojects__tests__projectspage-testtsx-1"},(0,a.kt)("inlineCode",{parentName:"h4"},"src\\projects\\__tests__\\ProjectsPage-test.tsx")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-diff"},"import React from 'react';\nimport { MemoryRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from '../../state';\nimport ProjectsPage from '../ProjectsPage';\nimport {\nrender,\nscreen,\nwaitForElementToBeRemoved,\n} from '@testing-library/react';\n\ndescribe('<ProjectsPage />', () => {\nfunction renderComponent() {\n   render(\n      <Provider store={store}>\n      <MemoryRouter>\n         <ProjectsPage />\n      </MemoryRouter>\n      </Provider>\n   );\n}\n...\n\n+  test('should display loading', () => {\n+    renderComponent();\n+    expect(screen.getByText(/loading/i)).toBeInTheDocument();\n+  });\n});\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Verify")," the ",(0,a.kt)("strong",{parentName:"p"},"test passed"),"."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"PASS  src/projects/__tests__/ProjectsPage-test.tsx\n")))),(0,a.kt)("h3",{id:"test-the-projects-display"},"Test the Projects Display"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Open")," a ",(0,a.kt)("inlineCode",{parentName:"p"},"command prompt")," (Windows) or ",(0,a.kt)("inlineCode",{parentName:"p"},"terminal")," (Mac).")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Change the ",(0,a.kt)("strong",{parentName:"p"},"current directory")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"code\\keeptrack"),".")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Run")," ",(0,a.kt)("em",{parentName:"p"},"one")," of the following sets of commands to install ",(0,a.kt)("inlineCode",{parentName:"p"},"Mock Service Worker")," to mock the HTTP requests."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"$ npm install msw --save-dev\n# or\n$ yarn add msw --dev\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Export the url used in the component from the ",(0,a.kt)("inlineCode",{parentName:"p"},"projectAPI.ts")," file."),(0,a.kt)("h4",{parentName:"li",id:"srcprojectsprojectapits"},(0,a.kt)("inlineCode",{parentName:"h4"},"src\\projects\\projectAPI.ts")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-diff"},"import { Project } from './Project';\n\nconst baseUrl = 'http://localhost:4000';\n- const url = `${baseUrl}/projects`;\n+ export const url = `${baseUrl}/projects`;\n...\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Add the setup code to mock the requests."),(0,a.kt)("h4",{parentName:"li",id:"srcprojects__tests__projectspage-testtsx-2"},(0,a.kt)("inlineCode",{parentName:"h4"},"src\\projects\\__tests__\\ProjectsPage-test.tsx")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-diff"},"import React from 'react';\nimport { MemoryRouter } from 'react-router-dom';\nimport { MOCK_PROJECTS } from '../MockProjects';\nimport { Provider } from 'react-redux';\nimport { store } from '../../state';\nimport ProjectsPage from '../ProjectsPage';\nimport {\nrender,\nscreen,\nwaitForElementToBeRemoved,\n} from '@testing-library/react';\n+ import { rest } from 'msw';\n+ import { setupServer } from 'msw/node';\n+ import { url as projectsUrl } from '../projectAPI';\n+ import { MOCK_PROJECTS } from '../MockProjects';\n\n+ // declare which API requests to mock\n+ const server = setupServer(\n+   // capture \"GET http://localhost:3000/projects\" requests\n+   rest.get(projectsUrl, (req, res, ctx) => {\n+     // respond using a mocked JSON body\n+     return res(ctx.json(MOCK_PROJECTS));\n+   })\n+ );\n\ndescribe('<ProjectsPage />', () => {\nfunction renderComponent() {\n   render(\n      <Provider store={store}>\n      <MemoryRouter>\n         <ProjectsPage />\n      </MemoryRouter>\n      </Provider>\n   );\n}\n\n+  beforeAll(() => server.listen());\n+  afterEach(() => server.resetHandlers());\n+  afterAll(() => server.close());\n\ntest('should render without crashing', () => {\n   renderComponent();\n   expect(screen).toBeDefined();\n});\n\ntest('should display loading', () => {\n   renderComponent();\n   expect(screen.getByText(/loading/i)).toBeInTheDocument();\n});\n});\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Test that the projects display after the mocked data is returned."),(0,a.kt)("h4",{parentName:"li",id:"srcprojects__tests__projectspage-testtsx-3"},(0,a.kt)("inlineCode",{parentName:"h4"},"src\\projects\\__tests__\\ProjectsPage-test.tsx")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-diff"},"...\n\ndescribe('<ProjectsPage />', () => {\nfunction renderComponent() {\n   render(\n      <Provider store={store}>\n      <MemoryRouter>\n         <ProjectsPage />\n      </MemoryRouter>\n      </Provider>\n   );\n}\n\nbeforeAll(() => server.listen());\nafterEach(() => server.resetHandlers());\nafterAll(() => server.close());\n\n...\n\n+  test('should display projects', async () => {\n+    renderComponent();\n+    expect(await screen.findAllByRole('img')).toHaveLength(\n+      MOCK_PROJECTS.length\n+    );\n+  });\n});\n\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Verify")," the ",(0,a.kt)("strong",{parentName:"p"},"test passed"),"."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"PASS  src/projects/__tests__/ProjectsPage-test.tsx\n")))),(0,a.kt)("h3",{id:"test-the-more-button-displays"},"Test the More Button Displays"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Test that the ",(0,a.kt)("strong",{parentName:"p"},"More button")," ",(0,a.kt)("strong",{parentName:"p"},"displays")," after the projects have loaded."),(0,a.kt)("h4",{parentName:"li",id:"srcprojects__tests__projectspage-testtsx-4"},(0,a.kt)("inlineCode",{parentName:"h4"},"src\\projects\\__tests__\\ProjectsPage-test.tsx")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-diff"},"...\nimport {\nrender,\nscreen,\nwaitForElementToBeRemoved,\n} from '@testing-library/react';\n...\n\ndescribe('<ProjectsPage />', () => {\n...\n\n+  test('should display more button', async () => {\n+    renderComponent();\n+    expect(\n+      await screen.findByRole('button', { name: /more/i })\n+    ).toBeInTheDocument();\n+  });\n+\n+  // this tests the same as the last test but demonstrates\n+  // what find* methods are doing\n+  test('should display more button with get', async () => {\n+    renderComponent();\n+    await waitForElementToBeRemoved(() => screen.queryByText(/loading/i));\n+    expect(screen.getByRole('button', { name: /more/i })).toBeInTheDocument();\n+  });\n});\n\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Verify")," the ",(0,a.kt)("strong",{parentName:"p"},"test passed"),"."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"PASS  src/projects/__tests__/ProjectsPage-test.tsx\n")))),(0,a.kt)("h3",{id:"test-the-error-displays"},"Test the Error Displays"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Test that a custom ",(0,a.kt)("strong",{parentName:"p"},"error")," ",(0,a.kt)("strong",{parentName:"p"},"displays")," when a server error is returned."),(0,a.kt)("h4",{parentName:"li",id:"srcprojects__tests__projectspage-testtsx-5"},(0,a.kt)("inlineCode",{parentName:"h4"},"src\\projects\\__tests__\\ProjectsPage-test.tsx")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-diff"},"...\nimport {\nrender,\nscreen,\nwaitForElementToBeRemoved,\n} from '@testing-library/react';\n...\n\ndescribe('<ProjectsPage />', () => {\n...\n\n+  test('should display custom error on server error', async () => {\n+    server.use(\n+      rest.get(projectsUrl, (req, res, ctx) => {\n+        return res(ctx.status(500, 'Server error'));\n+      })\n+    );\n+    renderComponent();\n+\n+    expect(\n+      await screen.findByText(/There was an error retrieving the project(s)./i)\n+    ).toBeInTheDocument();\n+  });\n\n});\n\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Verify")," the ",(0,a.kt)("strong",{parentName:"p"},"test passed"),"."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"PASS  src/projects/__tests__/ProjectsPage-test.tsx\n")))),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"-you-have-completed-testing-lab-5"},"\u2714"," You have completed Testing Lab 5"))}d.isMDXComponent=!0}}]);