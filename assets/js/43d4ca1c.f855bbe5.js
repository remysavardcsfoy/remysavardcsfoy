"use strict";(self.webpackChunkreact=self.webpackChunkreact||[]).push([[2378],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),p=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(i.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),c=p(n),d=r,k=c["".concat(i,".").concat(d)]||c[d]||u[d]||l;return n?a.createElement(k,o(o({ref:t},m),{},{components:n})):a.createElement(k,o({ref:t},m))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[c]="string"==typeof e?e:r,o[1]=s;for(var p=2;p<l;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},640:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const l={id:"A3-ModernJavaScript",title:"Modern JavaScript",sidebar_label:"Modern JavaScript",slug:"/modern-javascript"},o=void 0,s={unversionedId:"A3-ModernJavaScript",id:"A3-ModernJavaScript",title:"Modern JavaScript",description:"ECMAScript Logo",source:"@site/docs/A3-ModernJavaScript.md",sourceDirName:".",slug:"/modern-javascript",permalink:"/docs/modern-javascript",draft:!1,tags:[],version:"current",frontMatter:{id:"A3-ModernJavaScript",title:"Modern JavaScript",sidebar_label:"Modern JavaScript",slug:"/modern-javascript"}},i={},p=[{value:"Classes",id:"classes",level:2},{value:"Constructors",id:"constructors",level:3},{value:"Methods",id:"methods",level:3},{value:"Class Fields",id:"class-fields",level:3},{value:"Scope (var, let, const)",id:"scope-var-let-const",level:2},{value:"var",id:"var",level:3},{value:"let",id:"let",level:3},{value:"const",id:"const",level:3},{value:"Arrow Functions",id:"arrow-functions",level:2},{value:"Modules",id:"modules",level:2},{value:"First Module",id:"first-module",level:3},{value:"Another Module",id:"another-module",level:3},{value:"Template Literals",id:"template-literals",level:2},{value:"Default, Rest, Spread",id:"default-rest-spread",level:2},{value:"Default",id:"default",level:3},{value:"Rest",id:"rest",level:3},{value:"Spread",id:"spread",level:3},{value:"Destructuring",id:"destructuring",level:2},{value:"Objects",id:"objects",level:3},{value:"Arrays",id:"arrays",level:3},{value:"Optional Parameters",id:"optional-parameters",level:2},{value:"Object Initializer",id:"object-initializer",level:2},{value:"Reference",id:"reference",level:2}],m={toc:p},c="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/1474579/98454730-dd04e180-2135-11eb-8e4a-803478f01dab.png",alt:"ECMAScript Logo"})),(0,r.kt)("h2",{id:"classes"},"Classes"),(0,r.kt)("h3",{id:"constructors"},"Constructors"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Code:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},'class Person {\n  first;\n  last;\n  constructor(first, last) {\n    this.first = first;\n    this.last = last;\n  }\n}\n\nlet person = new Person("Ron", "Swanson");\nconsole.log(person.first + " " + person.last);\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Result:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-zsh"},"Ron Swanson\n")))),(0,r.kt)("h3",{id:"methods"},"Methods"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Code:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'class Person {\n  first;\n  last;\n  constructor(first, last) {\n    this.first = first;\n    this.last = last;\n  }\n  getFullName() {\n    return this.first + " " + this.last;\n  }\n}\n\nlet person = new Person("Ron", "Swanson");\nconsole.log(person.getFullName());\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Result:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-zsh"},"Ron Swanson\n")))),(0,r.kt)("h3",{id:"class-fields"},"Class Fields"),(0,r.kt)("p",null,"Class Fields are only a stage-3 proposal so Babel's preset environment will use an additional ",(0,r.kt)("a",{parentName:"p",href:"https://babeljs.io/docs/en/babel-plugin-proposal-class-properties"},"plugin")," automatically."),(0,r.kt)("p",null,"The proposed feature of class fields is commonly used in React projects and is included in ",(0,r.kt)("inlineCode",{parentName:"p"},"Create React App"),"'s default configuration."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("a",{parentName:"p",href:"https://github.com/tc39/proposal-class-fields"},"Class field declarations for JavaScript"))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"This proposed feature is available in ",(0,r.kt)("inlineCode",{parentName:"p"},"Babel")," without any additional configuration.")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"This proposed feature is available in ",(0,r.kt)("inlineCode",{parentName:"p"},"TypeScript")," without any additional configuration.")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Code:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},'class Person {\n  first;\n  last;\n}\n\nlet person = new Person();\nperson.first = "Tom";\nperson.last = "Haverford";\n\nconsole.log(person.first + " " + person.last);\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Result:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-zsh"},"Craig McKeachie\n")))),(0,r.kt)("h2",{id:"scope-var-let-const"},"Scope (var, let, const)"),(0,r.kt)("h3",{id:"var"},"var"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Code"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},'var numbers = [1, 2, 3, 4];\n\nfor (var counter = 0; counter < numbers.length; counter++) {\n  console.log(numbers[counter]);\n}\n\nconsole.log("at end: " + counter);\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Result"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-zsh"},"1\n2\n3\n4\nat end: 4\n")))),(0,r.kt)("h3",{id:"let"},"let"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Code"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},'let numbers = [1, 2, 3, 4];\n\nfor (let counter = 0; counter < numbers.length; counter++) {\n  console.log(numbers[counter]);\n}\n\nconsole.log("at end: " + counter);\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Result"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"console.log('at end: ' + counter);\n                        ^\n\nReferenceError: counter is not defined\n")))),(0,r.kt)("h3",{id:"const"},"const"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Code"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const a = 1;\na = 2;\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Result"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-zsh"},'Error: "a" is read-only\n')))),(0,r.kt)("h2",{id:"arrow-functions"},"Arrow Functions"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Function Code"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let numbers = [1, 2, 3, 4];\n//verbose\nnumbers.forEach(function (n) {\n  console.log(n);\n});\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Result"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-zsh"},"1\n2\n3\n4\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Arrow Function Code"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let numbers = [1, 2, 3, 4];\nnumbers.forEach((n) => console.log(n));\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Result"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-zsh"},"1\n2\n3\n4\n")))),(0,r.kt)("h2",{id:"modules"},"Modules"),(0,r.kt)("h3",{id:"first-module"},"First Module"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create file ",(0,r.kt)("inlineCode",{parentName:"p"},"src\\my-module.[js|ts]"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Add the following code to ",(0,r.kt)("inlineCode",{parentName:"p"},"src\\my-module.[js|ts]")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},'export function myFunction() {\n  return "myFunction was run.";\n}\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Code in ",(0,r.kt)("inlineCode",{parentName:"p"},"program.[js|ts]")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Auto import doesn't work in JavaScript, you need to use TypeScript")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},'import { myFunction } from "./my-module";\nconsole.log(myFunction());\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Result"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"myFunction was run.\n")))),(0,r.kt)("h3",{id:"another-module"},"Another Module"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Code in ",(0,r.kt)("inlineCode",{parentName:"p"},"my-module.[js|ts]")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},'//my-module.js\nexport function myFunction() {\n  return "myFunction was run.";\n}\n\nfunction myPrivateFunction() {\n  return "myPrivateFunction was run.";\n}\n\nlet myObject = {\n  myName: "I can access myObject\'s name",\n  myMethod: function () {\n    return "myMethod on myObject is running.";\n  },\n};\n\nexport { myObject };\n\nexport const myPrimitive = 55;\n\nexport class MyClass {\n  myClassMethod() {\n    return "myClassMethod on myClass is running.";\n  }\n}\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Code in ",(0,r.kt)("inlineCode",{parentName:"p"},"program.[js|ts]")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},'import { myFunction, myObject, myPrimitive, MyClass } from "./my-module";\n\nconsole.log(myFunction());\n\nconsole.log(myObject.myName);\nconsole.log(myObject.myMethod());\n\nconsole.log(myPrimitive);\n\nlet myClass = new MyClass();\nconsole.log(myClass.myClassMethod());\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Result"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"myFunction was run.\nI can access myObject's name\nmyMethod on myObject is running.\n55\nmyClassMethod on myClass is running.\n")))),(0,r.kt)("h2",{id:"template-literals"},"Template Literals"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Code"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},'let verb = "ate";\nlet noun = "food";\nlet sentence = `I ${verb} ${noun}. \nI enjoyed it.`;\nconsole.log(sentence);\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Result"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-zsh"},"I ate food.\nI enjoyed it.\n")))),(0,r.kt)("h2",{id:"default-rest-spread"},"Default, Rest, Spread"),(0,r.kt)("h3",{id:"default"},"Default"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Code"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},"function add(x, y = 2) {\n  return x + y;\n}\n\nconsole.log(add(1, 1) === 2);\nconsole.log(add(1) === 3);\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Result"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"true\ntrue\n")))),(0,r.kt)("h3",{id:"rest"},"Rest"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Code"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},'function printArguments(a, b, ...theArguments) {\n  console.log("a:", a);\n  console.log("b:", b);\n  for (let argument of theArguments) {\n    console.log(argument);\n  }\n}\n\nprintArguments("a", "b", "c", "d");\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Result"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"a: a\nb: b\nc\n")))),(0,r.kt)("h3",{id:"spread"},"Spread"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Code"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},"function add(x, y, z) {\n  return x + y + z;\n}\n\n// Pass each elem of array as argument\nconsole.log(add(...[1, 2, 3]));\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Result"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"6\n")))),(0,r.kt)("h2",{id:"destructuring"},"Destructuring"),(0,r.kt)("h3",{id:"objects"},"Objects"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Code"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},'let person = {\n  first: "Thomas",\n  last: "Edison",\n  age: 5,\n  twitter: "@tom",\n};\n\nlet { first, last } = person;\nconsole.log(first);\nconsole.log(last);\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Result"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"Thomas\nEdison\n")))),(0,r.kt)("p",null,"Assignment is left to right with an object literal."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Code"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},'let person = {\n  first: "Thomas",\n  last: "Edison",\n  age: 5,\n  twitter: "@tom",\n};\n\nlet { first: firstName, last: lastName } = person;\nconsole.log(firstName);\nconsole.log(lastName);\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Result"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"Thomas\nEdison\n")))),(0,r.kt)("h3",{id:"arrays"},"Arrays"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Code"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let numbers = [1, 2, 3];\n\nlet [a, b, c] = numbers;\nconsole.log(a);\nconsole.log(b);\nconsole.log(c);\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Result"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"1\n2\n3\n")))),(0,r.kt)("p",null,"If you don't need an item just skip that item in the assignment."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Code"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let numbers = [1, 2, 3];\n\nlet [, b, c] = numbers;\n// console.log(a);\nconsole.log(b);\nconsole.log(c);\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Result"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"2\n3\n")))),(0,r.kt)("h2",{id:"optional-parameters"},"Optional Parameters"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Code"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},'function buildName(first: string, last: string, middle?: string) {\n  if (middle) {\n    return `${first} ${middle} ${last}`;\n  } else {\n    return `${first} ${last}`;\n  }\n}\n\nconsole.log(buildName("Craig", "McKeachie"));\nconsole.log(buildName("Craig", "McKeachie", "D."));\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Result"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"Craig McKeachie\nCraig D. McKeachie\n")))),(0,r.kt)("h2",{id:"object-initializer"},"Object Initializer"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Code"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},'export {}; //this line only necessary when using TypeScript\nconst name = "Leslie";\n\nconst user = {\n  name: name,\n};\n\nconsole.log("user ", user.name);\n\nconst user1 = {\n  name,\n};\n\nconsole.log("user1 ", user.name);\n')),(0,r.kt)("blockquote",{parentName:"li"},(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("a",{parentName:"p",href:"https://stackoverflow.com/questions/40900791/cannot-redeclare-block-scoped-variable-in-unrelated-files"},"More Information on why export is necessary when using TypeScript")))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Result"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"user  Leslie\nuser1  Leslie\n")))),(0,r.kt)("h2",{id:"reference"},"Reference"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"http://es6-features.org"},"ES6 Features")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://babeljs.io/docs/en/learn"},"Learn ES2015/6")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://medium.com/javascript-scene/how-to-learn-es6-47d9a1ac2620"},"How to Learn ES6"))))}u.isMDXComponent=!0}}]);