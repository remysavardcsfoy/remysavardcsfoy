"use strict";(self.webpackChunkreact=self.webpackChunkreact||[]).push([[4499],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>j});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=o.createContext({}),i=function(e){var t=o.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=i(e.components);return o.createElement(p.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,p=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=i(n),u=a,j=d["".concat(p,".").concat(u)]||d[u]||m[u]||r;return n?o.createElement(j,s(s({ref:t},l),{},{components:n})):o.createElement(j,s({ref:t},l))}));function j(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,s=new Array(r);s[0]=u;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c[d]="string"==typeof e?e:a,s[1]=c;for(var i=2;i<r;i++)s[i]=n[i];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2132:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>m,frontMatter:()=>r,metadata:()=>c,toc:()=>i});var o=n(7462),a=(n(7294),n(3905));const r={title:"Lab 25: Redux with React using connect"},s=void 0,c={unversionedId:"labs/js/ReduxWithReactUsingConnect",id:"labs/js/ReduxWithReactUsingConnect",title:"Lab 25: Redux with React using connect",description:"Objectives",source:"@site/docs/labs/js/25-ReduxWithReactUsingConnect.md",sourceDirName:"labs/js",slug:"/labs/js/ReduxWithReactUsingConnect",permalink:"/docs/labs/js/ReduxWithReactUsingConnect",draft:!1,tags:[],version:"current",sidebarPosition:25,frontMatter:{title:"Lab 25: Redux with React using connect"}},p={},i=[{value:"Objectives",id:"objectives",level:2},{value:"Steps",id:"steps",level:2},{value:"Refactor the Page (container) component to be a Redux connected component",id:"refactor-the-page-container-component-to-be-a-redux-connected-component",level:3},{value:"<code>srcprojectsProjectsPage.js</code>",id:"srcprojectsprojectspagejs-3",level:4},{value:"Refactor the Form component to be a Redux connected component",id:"refactor-the-form-component-to-be-a-redux-connected-component",level:3},{value:"<code>srcprojectsProjectForm.js</code>",id:"srcprojectsprojectformjs",level:4},{value:"\u2714 You have completed Lab 25",id:"-you-have-completed-lab-25",level:3}],l={toc:i},d="wrapper";function m(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,o.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"objectives"},"Objectives"),(0,a.kt)("ul",{className:"contains-task-list"},(0,a.kt)("li",{parentName:"ul",className:"task-list-item"},(0,a.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Refactor the Page (container) component to be a Redux connected component"),(0,a.kt)("li",{parentName:"ul",className:"task-list-item"},(0,a.kt)("input",{parentName:"li",type:"checkbox",checked:!1,disabled:!0})," ","Refactor the Form component to be a Redux connected component")),(0,a.kt)("h2",{id:"steps"},"Steps"),(0,a.kt)("h3",{id:"refactor-the-page-container-component-to-be-a-redux-connected-component"},"Refactor the Page (container) component to be a Redux connected component"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Remove the Page (container) component's state."),(0,a.kt)("h4",{parentName:"li",id:"srcprojectsprojectspagejs"},(0,a.kt)("inlineCode",{parentName:"h4"},"src\\projects\\ProjectsPage.js")),(0,a.kt)("blockquote",{parentName:"li"},(0,a.kt)("p",{parentName:"blockquote"},"Make sure you are in Project",(0,a.kt)("strong",{parentName:"p"},"s"),"Page.js not ProjectPage.js.")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-diff"},"\nclass ProjectsPage extends React.Component{\n-  state = {\n-    projects: [],\n-    loading: false,\n-    error: undefined,\n-    page: 20\n-  };\n\n}\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Replace setState and API calls with calls to action creators passed in via props."),(0,a.kt)("h4",{parentName:"li",id:"srcprojectsprojectspagejs-1"},(0,a.kt)("inlineCode",{parentName:"h4"},"src\\projects\\ProjectsPage.js")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-diff"},"class ProjectsPage extends React.Component{\n\nloadProjects(page) {\n- this.setState({ loading: true });\n- projectAPI\n-   .get(page)\n-   .then(data => {\n-     if (page === 1) {\n-       this.setState({ projects: data, loading: false, page });\n-     } else {\n-       this.setState(previousState => {\n-         return {\n-           projects: [...previousState.projects, ...data],\n-           loading: false,\n-           page\n-         };\n-       });\n-     }\n-   })\n-   .catch(error => this.setState({ error: error.message, loading: false }));\n+    this.props.onLoad(page);\n}\n\ncomponentDidMount() {\n-  this.loadProjects(this.state.page);\n+  this.loadProjects(1);\n}\n\nhandleMoreClick = () => {\n- const nextPage = this.state.page + 1;\n+ const nextPage = this.props.page + 1;\nthis.loadProjects(nextPage);\n};\n\nsaveProject(project){\n- projectAPI\n-   .put(project)\n-   .then(data => {\n-     this.setState(state => {\n-       let projects = state.projects.map(p => {\n-         return p.id === project.id ? project : p;\n-       });\n-       return { projects };\n-     });\n-   })\n-   .catch(error => {\n-     this.setState({ error: error.message });\n-   });\nthis.props.onSave(project)\n}\n\n}\n"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"In the render method, update all references to ",(0,a.kt)("inlineCode",{parentName:"p"},"state")," to pull from ",(0,a.kt)("inlineCode",{parentName:"p"},"props"),"."),(0,a.kt)("h4",{parentName:"li",id:"srcprojectsprojectspagejs-2"},(0,a.kt)("inlineCode",{parentName:"h4"},"src\\projects\\ProjectsPage.js")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-diff"},'class ProjectsPage extends React.Component{\n...\n\nrender(){\n    ...\n-    {this.state.error && (\n+     this.props.error && (\n       <div className="row">\n         <div className="card large error">\n           <section>\n             <p>\n               <span className="icon-alert inverse "></span>\n-              {this.state.error}\n+              {this.props.error}\n             </p>\n           </section>\n         </div>\n       </div>\n\n     )}\n    ...\n    <ProjectList\n-          projects={this.state.projects}\n-          onSave={this.saveProject}\n+          projects={this.props.projects}\n+          onSave={this.props.onSave}\n        ></ProjectList>\n\n-    {!this.state.loading && !this.state.error && (\n+    {!this.props.loading && !this.props.error && (\n       <div className="row">\n         <div className="col-sm-12">\n           <div className="button-group fluid">\n             <button\n               className="button default"\n               onClick={this.handleMoreClick}\n             >\n               More...\n             </button>\n           </div>\n         </div>\n       </div>\n     )}\n\n-    {this.state.loading && (\n+     this.props.loading && (\n       <div className="center-page">\n         <span className="spinner primary"></span>\n         <p>Loading...</p>\n       </div>\n\n     )}\n\n}\n\n}\n')))),(0,a.kt)("p",null,"4) Connect the Page (container) component so it has access to the Redux store's state and is able to dispatch actions in the action creator functions passed in via props."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"You will need to comment out the existing default export as shown below.")),(0,a.kt)("h4",{id:"srcprojectsprojectspagejs-3"},(0,a.kt)("inlineCode",{parentName:"h4"},"src\\projects\\ProjectsPage.js")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},'// import { projectAPI } from \'./projectAPI\';\nimport { loadProjects, saveProject } from "./state/projectActions";\nimport { connect } from "react-redux";\n\n// export default ProjectsPage;\n\n// React Redux (connect)---------------\nfunction mapStateToProps(state) {\n  return {\n    ...state.projectState,\n  };\n}\n\nconst mapDispatchToProps = {\n  onLoad: loadProjects,\n  onSave: saveProject,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProjectsPage);\n')),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Be sure to ",(0,a.kt)("inlineCode",{parentName:"p"},"import connect")," from ",(0,a.kt)("inlineCode",{parentName:"p"},"react-redux")," NOT ",(0,a.kt)("inlineCode",{parentName:"p"},"http2"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"net"),", or ",(0,a.kt)("inlineCode",{parentName:"p"},"tls"),".")),(0,a.kt)("ol",{start:6},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Provide the store."),(0,a.kt)("h4",{parentName:"li",id:"srcappjs"},(0,a.kt)("inlineCode",{parentName:"h4"},"src\\App.js")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-diff"},'import ProjectPage from \'./projects/ProjectPage\';\n+ import { Provider } from \'react-redux\';\n+ import { store } from \'./state\';\n\nconst App: React.FC = () => {\n  return (\n+    <Provider store={store}>\n      <Router>\n        <header className="sticky">\n          <span className="logo">\n            <img src="/assets/logo-3.svg" alt="logo" width="49" height="99" />\n          </span>\n          <NavLink to="/"  className="button rounded">\n            <span className="icon-home"></span>\n            Home\n          </NavLink>\n          <NavLink to="/projects/" className="button rounded">\n            Projects\n          </NavLink>\n        </header>\n        <div className="container">\n          <Routes>\n            <Route path="/"  component={HomePage} />\n            <Route path="/projects"  component={ProjectsPage} />\n            <Route path="/projects/:id" component={ProjectPage} />\n          </Routes>\n        </div>\n      </Router>\n+   </Provider>\n  );\n};\n\nexport default App;\n'))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Verify")," the application works as it did previously including loading and updating the projects."))),(0,a.kt)("h3",{id:"refactor-the-form-component-to-be-a-redux-connected-component"},"Refactor the Form component to be a Redux connected component"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Connect the Form component so it has access to the Redux store's state and is able to dispatch actions in the action creator functions passed in via props.")),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"You will need to comment out the existing default export as shown below.")),(0,a.kt)("h4",{id:"srcprojectsprojectformjs"},(0,a.kt)("inlineCode",{parentName:"h4"},"src\\projects\\ProjectForm.js")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"...\nimport { saveProject } from './state/projectActions';\nimport { connect } from 'react-redux';\n...\n\n// export default ProjectForm;\n\n// React Redux (connect)---------------\n\nconst mapDispatchToProps = {\nonSave: saveProject\n};\n\nexport default connect(\nnull,\nmapDispatchToProps\n)(ProjectForm);\n\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Provide the store."),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"This was already done in ",(0,a.kt)("inlineCode",{parentName:"li"},"src\\App.js")," because it is inherited from the parent Page component: Page =>List=>Form."))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"In the ",(0,a.kt)("inlineCode",{parentName:"p"},"ProjectList")," component, keep ",(0,a.kt)("inlineCode",{parentName:"p"},"onSave")," in the ",(0,a.kt)("inlineCode",{parentName:"p"},"propTypes")," but update the ",(0,a.kt)("inlineCode",{parentName:"p"},"render")," method to not pass ",(0,a.kt)("inlineCode",{parentName:"p"},"onSave")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"<ProjectForm>")," as it is now automatically connected to that Redux action via the ",(0,a.kt)("inlineCode",{parentName:"p"},"Provider"),"."),(0,a.kt)("h4",{parentName:"li",id:"srcprojectsprojectlistjs"},(0,a.kt)("inlineCode",{parentName:"h4"},"src\\Projects\\ProjectList.js")),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-diff"},'\nclass ProjectList extends React.Component {\n  state = {\n    editingProject: {}\n  };\n  handleEdit = (project) => {\n    this.setState({ editingProject: project });\n  };\n\n  cancelEditing = () => {\n    this.setState({ editingProject: {} });\n  };\n\n  render() {\n-   const { projects, onSave } = this.props;\n+    const { projects } = this.props;\n\n    let item;\n    const items = projects.map((project) => {\n      if (project !== this.state.editingProject) {\n        item = (\n          <div key={project.id} className="cols-sm">\n            <ProjectCard\n              project={project}\n              onEdit={() => {\n                this.handleEdit(project);\n              }}\n            ></ProjectCard>\n          </div>\n        );\n      } else {\n        item = (\n          <div key={project.id} className="cols-sm">\n            <ProjectForm\n              project={project}\n-             onSave={onSave}\n              onCancel={this.cancelEditing}\n            ></ProjectForm>\n          </div>\n        );\n      }\n      return item;\n    });\n\n    return <div className="row">{items}</div>;\n  }\n}\n\nProjectList.propTypes = {\n  projects: PropTypes.arrayOf(PropTypes.instanceOf(Project)).isRequired,\n  onSave: PropTypes.func.isRequired\n};\n'))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Verify")," the application still works including loading and updating the projects."))),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"-you-have-completed-lab-25"},"\u2714"," You have completed Lab 25"))}m.isMDXComponent=!0}}]);