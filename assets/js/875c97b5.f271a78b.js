"use strict";(self.webpackChunkreact=self.webpackChunkreact||[]).push([[3654],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>k});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=a.createContext({}),p=function(e){var n=a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},m=function(e){var n=p(e.components);return a.createElement(i.Provider,{value:n},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},d=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),c=p(t),d=r,k=c["".concat(i,".").concat(d)]||c[d]||u[d]||l;return t?a.createElement(k,o(o({ref:n},m),{},{components:t})):a.createElement(k,o({ref:n},m))}));function k(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,o=new Array(l);o[0]=d;var s={};for(var i in n)hasOwnProperty.call(n,i)&&(s[i]=n[i]);s.originalType=e,s[c]="string"==typeof e?e:r,o[1]=s;for(var p=2;p<l;p++)o[p]=t[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}d.displayName="MDXCreateElement"},8222:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var a=t(7462),r=(t(7294),t(3905));const l={id:"A3-ECMAScriptReact",title:"Essential JavaScript for React",sidebar_label:"Essential JavaScript for React",slug:"/essential-javascript-react"},o=void 0,s={unversionedId:"A3-ECMAScriptReact",id:"A3-ECMAScriptReact",title:"Essential JavaScript for React",description:"\x3c!-- ## Setup",source:"@site/docs/A3-ECMAScriptReact.md",sourceDirName:".",slug:"/essential-javascript-react",permalink:"/docs/essential-javascript-react",draft:!1,tags:[],version:"current",frontMatter:{id:"A3-ECMAScriptReact",title:"Essential JavaScript for React",sidebar_label:"Essential JavaScript for React",slug:"/essential-javascript-react"}},i={},p=[{value:"Scope (var, let, const)",id:"scope-var-let-const",level:2},{value:"var",id:"var",level:3},{value:"let",id:"let",level:3},{value:"const",id:"const",level:3},{value:"Arrow Functions",id:"arrow-functions",level:2},{value:"Destructuring",id:"destructuring",level:2},{value:"Objects",id:"objects",level:3},{value:"Arrays",id:"arrays",level:3},{value:"Classes",id:"classes",level:2},{value:"Constructors",id:"constructors",level:3},{value:"Methods",id:"methods",level:3},{value:"Class Fields",id:"class-fields",level:3},{value:"Modules",id:"modules",level:2},{value:"First Module",id:"first-module",level:3},{value:"Another Module",id:"another-module",level:3},{value:"Spread",id:"spread",level:2},{value:"Array.map() method",id:"arraymap-method",level:2},{value:"a. for loop",id:"a-for-loop",level:3},{value:"b. #array.forEach",id:"b-arrayforeach",level:3},{value:"c. #array.map",id:"c-arraymap",level:3},{value:"d. #array.map with arrow function",id:"d-arraymap-with-arrow-function",level:3}],m={toc:p},c="wrapper";function u(e){let{components:n,...t}=e;return(0,r.kt)(c,(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"scope-var-let-const"},"Scope (var, let, const)"),(0,r.kt)("p",null,"Summary:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"// myLetVariable is *not* visible out here\n\nfor (let myLetVariable = 0; myLetVariable < 5; myLetVariable++) {\n  // myLetVariable is only visible in here\n}\n\n// myLetVariable is *not* visible out here\n")),(0,r.kt)("h3",{id:"var"},"var"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Code"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},'var numbers = [1, 2, 3, 4];\n\nfor (var counter = 0; counter < numbers.length; counter++) {\n  console.log(numbers[counter]);\n}\n\nconsole.log("at end: " + counter);\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Result"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-zsh"},"1\n2\n3\n4\nat end: 4\n")))),(0,r.kt)("h3",{id:"let"},"let"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Code"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-diff"},"let numbers = [1, 2, 3, 4];\n\n- for (var counter = 0; counter < numbers.length; counter++) {\n+ for (let counter = 0; counter < numbers.length; counter++) {\n  console.log(numbers[counter]);\n}\n\nconsole.log('at end: ' + counter);\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Result"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"console.log('at end: ' + counter);\n                        ^\n\nReferenceError: counter is not defined\n")))),(0,r.kt)("h3",{id:"const"},"const"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Code"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const a = 1;\na = 2;\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Result"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-zsh"},"TypeError: Assignment to constant variable.\n")))),(0,r.kt)("h2",{id:"arrow-functions"},"Arrow Functions"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Code"),(0,r.kt)("h3",{parentName:"li",id:"using-a-function"},"Using a function"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let numbers = [1, 2, 3, 4];\n//verbose\nnumbers.forEach(function (n) {\n  console.log(n);\n});\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Result"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-zsh"},"1\n2\n3\n4\n")),(0,r.kt)("h3",{parentName:"li",id:"using-an-arrow-function"},"Using an arrow function")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Code"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let numbers = [1, 2, 3, 4];\nnumbers.forEach((n) => console.log(n));\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Result"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-zsh"},"1\n2\n3\n4\n")))),(0,r.kt)("h2",{id:"destructuring"},"Destructuring"),(0,r.kt)("h3",{id:"objects"},"Objects"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Code"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},'let person = {\n  first: "Thomas",\n  last: "Edison",\n  age: 5,\n  twitter: "@tom",\n};\n\nlet { first, last } = person;\nconsole.log(first);\nconsole.log(last);\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Result"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"Thomas\nEdison\n")))),(0,r.kt)("p",null,"Assignment is left to right with an object literal."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Code"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},'let person = {\n  first: "Thomas",\n  last: "Edison",\n  age: 5,\n  twitter: "@tom",\n};\n\nlet { first: firstName, last: lastName } = person;\nconsole.log(firstName);\nconsole.log(lastName);\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Result"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"Thomas\nEdison\n")))),(0,r.kt)("h3",{id:"arrays"},"Arrays"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Code"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},"let numbers = [1, 2, 3];\n\nlet [a, b, c] = numbers;\nconsole.log(a);\nconsole.log(b);\nconsole.log(c);\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Result"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"1\n2\n3\n")))),(0,r.kt)("h2",{id:"classes"},"Classes"),(0,r.kt)("h3",{id:"constructors"},"Constructors"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Code:"),(0,r.kt)("h4",{parentName:"li",id:"if-using-babel-compiler"},"If using ",(0,r.kt)("inlineCode",{parentName:"h4"},"Babel")," compiler:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},'class Person {\n  constructor(first, last) {\n    this.first = first;\n    this.last = last;\n  }\n}\n\nlet person = new Person("Ron", "Swanson");\nconsole.log(person.first + " " + person.last);\n')),(0,r.kt)("h4",{parentName:"li",id:"if-using-typescript-tsc-compiler"},"If using TypeScript (",(0,r.kt)("inlineCode",{parentName:"h4"},"tsc"),") compiler:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'class Person {\n  first;\n  last;\n  constructor(first, last) {\n    this.first = first;\n    this.last = last;\n  }\n}\n\nlet person = new Person("Ron", "Swanson");\nconsole.log(person.first + " " + person.last);\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Result:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-zsh"},"Ron Swanson\n")))),(0,r.kt)("h3",{id:"methods"},"Methods"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Code:"),(0,r.kt)("h4",{parentName:"li",id:"if-using-babel-compiler-1"},"If using ",(0,r.kt)("inlineCode",{parentName:"h4"},"Babel")," compiler:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},'class Person {\n  constructor(first, last) {\n    this.first = first;\n    this.last = last;\n  }\n  getFullName() {\n    return this.first + " " + this.last;\n  }\n}\n\nlet person = new Person("Ron", "Swanson");\nconsole.log(person.getFullName());\n')),(0,r.kt)("h4",{parentName:"li",id:"if-using-typescript-tsc-compiler-1"},"If using TypeScript (",(0,r.kt)("inlineCode",{parentName:"h4"},"tsc"),") compiler:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-ts"},'class Person {\n  first;\n  last;\n  constructor(first, last) {\n    this.first = first;\n    this.last = last;\n  }\n  getFullName() {\n    return this.first + " " + this.last;\n  }\n}\n\nlet person = new Person("Ron", "Swanson");\nconsole.log(person.getFullName());\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Result:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-zsh"},"Ron Swanson\n")))),(0,r.kt)("h3",{id:"class-fields"},"Class Fields"),(0,r.kt)("p",null,"Class Fields are only a stage-3 proposal so you need to install an additional ",(0,r.kt)("a",{parentName:"p",href:"https://babeljs.io/docs/en/babel-plugin-proposal-class-properties"},"plugin")," to use them."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("a",{parentName:"p",href:"https://github.com/tc39/proposal-class-fields"},"Class field declarations for JavaScript"))),(0,r.kt)("p",null,"The proposed feature of class fields is commonly used in React projects and is included in ",(0,r.kt)("inlineCode",{parentName:"p"},"Create React App"),"'s default configuration as well as the ",(0,r.kt)("inlineCode",{parentName:"p"},"Run Code")," extension we are using to run these examples."),(0,r.kt)("p",null,"This propsed feature is available in TypeScript without any additional configuration."),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Code:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},'class Person {\n  first;\n  last;\n}\n\nlet person = new Person();\nperson.first = "Tom";\nperson.last = "Haverford";\n\nconsole.log(person.first + " " + person.last);\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Result:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-zsh"},"Craig McKeachie\n")))),(0,r.kt)("h2",{id:"modules"},"Modules"),(0,r.kt)("h3",{id:"first-module"},"First Module"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create file ",(0,r.kt)("inlineCode",{parentName:"p"},"src\\my-module.js")," or ",(0,r.kt)("inlineCode",{parentName:"p"},".\\my-module.ts"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Add the following code to ",(0,r.kt)("inlineCode",{parentName:"p"},"my-module.[js|ts]")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},'export function myFunction() {\n  return "myFunction was run.";\n}\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Code in ",(0,r.kt)("inlineCode",{parentName:"p"},"program.[js|ts]")),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Auto import doesn't work in JavaScript, you need to use TypeScript")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},'import { myFunction } from "./my-module";\nconsole.log(myFunction());\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Result"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"myFunction was run.\n")))),(0,r.kt)("h3",{id:"another-module"},"Another Module"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Code in ",(0,r.kt)("inlineCode",{parentName:"p"},"my-module.[js|ts]")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},'export function myFunction() {\n  return "myFunction was run.";\n}\n\nfunction myPrivateFunction() {\n  return "myPrivateFunction was run.";\n}\n\nlet myObject = {\n  myName: "I can access myObject\'s name",\n  myMethod: function () {\n    return "myMethod on myObject is running.";\n  },\n};\n\nexport { myObject };\n\nexport const myPrimitive = 55;\n\nexport class MyClass {\n  myClassMethod() {\n    return "myClassMethod on myClass is running.";\n  }\n}\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Code in ",(0,r.kt)("inlineCode",{parentName:"p"},"program.[js|ts]")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},'import { myFunction, myObject, myPrimitive, MyClass } from "./my-module";\n\nconsole.log(myFunction());\n\nconsole.log(myObject.myName);\nconsole.log(myObject.myMethod());\n\nconsole.log(myPrimitive);\n\nlet myClass = new MyClass();\nconsole.log(myClass.myClassMethod());\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Result"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre"},"myFunction was run.\nI can access myObject's name\nmyMethod on myObject is running.\n55\nmyClassMethod on myClass is running.\n")))),(0,r.kt)("h2",{id:"spread"},"Spread"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Code"),(0,r.kt)("h4",{parentName:"li",id:"programjsts"},(0,r.kt)("inlineCode",{parentName:"h4"},"program.[js|ts]")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},'let person = {\n  first: "Thomas",\n  last: "Edison",\n  age: 5,\n  twitter: "@tom",\n};\n\nlet anotherPerson = {\n  ...person,\n  age: 80,\n};\n\nconsole.log(anotherPerson);\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Result"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"{ first: 'Thomas', last: 'Edison', age: 80, twitter: '@tom' }\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Code"),(0,r.kt)("h4",{parentName:"li",id:"programjsts-1"},(0,r.kt)("inlineCode",{parentName:"h4"},"program.[js|ts]")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const numbers = [1, 2, 3, 4];\nconst moreNumbers = [...numbers, 5, 6, 7, 8];\nconsole.log(moreNumbers);\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Result"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"[\n  1, 2, 3, 4,\n  5, 6, 7, 8\n]\n")))),(0,r.kt)("h2",{id:"arraymap-method"},"Array.map() method"),(0,r.kt)("h3",{id:"a-for-loop"},"a. for loop"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const numbers = [1, 2, 3, 4, 5];\nconst tens = [];\n\nfor (let index = 0; index < numbers.length; index++) {\n  const number = numbers[index];\n  tens.push(number * 10);\n}\n\nconsole.log(tens);\n")),(0,r.kt)("h3",{id:"b-arrayforeach"},"b. #array.forEach"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const numbers = [1, 2, 3, 4, 5];\nconst tens = [];\n\nnumbers.forEach(function (number) {\n  tens.push(number * 10);\n});\n\nconsole.log(tens);\n")),(0,r.kt)("h3",{id:"c-arraymap"},"c. #array.map"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const numbers = [1, 2, 3, 4, 5];\n\nconst tens = numbers.map(function (number) {\n  return number * 10;\n});\n\nconsole.log(tens);\n")),(0,r.kt)("h3",{id:"d-arraymap-with-arrow-function"},"d. #array.map with arrow function"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const numbers = [1, 2, 3, 4, 5];\nconst tens = numbers.map((number) => number * 10);\nconsole.log(tens);\n")))}u.isMDXComponent=!0}}]);