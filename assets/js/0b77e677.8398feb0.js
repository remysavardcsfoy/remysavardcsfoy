"use strict";(self.webpackChunkreact=self.webpackChunkreact||[]).push([[9490],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=p(n),d=r,h=m["".concat(s,".").concat(d)]||m[d]||u[d]||l;return n?a.createElement(h,o(o({ref:t},c),{},{components:n})):a.createElement(h,o({ref:t},c))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[m]="string"==typeof e?e:r,o[1]=i;for(var p=2;p<l;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1907:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const l={id:"A11-ReactTypeScript",title:"React & TypeScript",sidebar_label:"React & TypeScript",slug:"/react-typescript"},o=void 0,i={unversionedId:"A11-ReactTypeScript",id:"A11-ReactTypeScript",title:"React & TypeScript",description:"Installation",source:"@site/docs/A11-ReactTypeScript.md",sourceDirName:".",slug:"/react-typescript",permalink:"/docs/react-typescript",draft:!1,tags:[],version:"current",frontMatter:{id:"A11-ReactTypeScript",title:"React & TypeScript",sidebar_label:"React & TypeScript",slug:"/react-typescript"}},s={},p=[{value:"Installation",id:"installation",level:2},{value:"Props",id:"props",level:2},{value:"Function Component",id:"function-component",level:3},{value:"<code>srcHello.tsx</code>",id:"srchellotsx",level:4},{value:"<code>srcApp.tsx</code>",id:"srcapptsx",level:4},{value:"<code>srcApp.tsx</code>",id:"srcapptsx-1",level:4},{value:"Class Component",id:"class-component",level:3},{value:"<code>srcHello.tsx</code>",id:"srchellotsx-1",level:4},{value:"State",id:"state",level:2},{value:"<code>srcHello.tsx</code>",id:"srchellotsx-2",level:4},{value:"<code>srcApp.tsx</code>",id:"srcapptsx-2",level:4},{value:"Event Handlers",id:"event-handlers",level:2},{value:"<code>srcHello.tsx</code>",id:"srchellotsx-3",level:4},{value:"Reference",id:"reference",level:2}],c={toc:p},m="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(m,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"installation"},"Installation"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"See the section ",(0,r.kt)("inlineCode",{parentName:"p"},"Create New TypeScript Project")," in ",(0,r.kt)("a",{parentName:"p",href:"/docs/project-setup"},"Project Setup"),".")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"We will use the ",(0,r.kt)("inlineCode",{parentName:"p"},"my-app")," project we created with TypeScript enabled using ",(0,r.kt)("inlineCode",{parentName:"p"},"Create React App"),"."))),(0,r.kt)("h2",{id:"props"},"Props"),(0,r.kt)("h3",{id:"function-component"},"Function Component"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Create the file ",(0,r.kt)("inlineCode",{parentName:"li"},"src\\Hello.tsx"),"."),(0,r.kt)("li",{parentName:"ol"},"Create a function component.")),(0,r.kt)("h4",{id:"srchellotsx"},(0,r.kt)("inlineCode",{parentName:"h4"},"src\\Hello.tsx")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'import React from "react";\n\nexport interface Props {\n  name: string;\n  enthusiasmLevel?: number;\n}\n\nfunction Hello({ name, enthusiasmLevel = 1 }: Props) {\n  if (enthusiasmLevel <= 0) {\n    throw new Error("You could be a little more enthusiastic. :D");\n  }\n\n  return (\n    <div className="hello">\n      <div className="greeting">\n        Hello {name + getExclamationMarks(enthusiasmLevel)}\n      </div>\n    </div>\n  );\n}\n\nexport default Hello;\n\n// helpers\n\nfunction getExclamationMarks(numChars: number) {\n  return Array(numChars + 1).join("!");\n}\n')),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Render ",(0,r.kt)("inlineCode",{parentName:"li"},"<Hello />")," component in the App component.")),(0,r.kt)("h4",{id:"srcapptsx"},(0,r.kt)("inlineCode",{parentName:"h4"},"src\\App.tsx")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-diff"},'import React from \'react\';\n- import logo from \'./logo.svg\';\nimport \'./App.css\';\nimport Hello from \'./Hello\';\n\nconst App: React.FC = () => {\n  return (\n    <div className="App">\n-      <header className="App-header">\n-        <img src={logo} className="App-logo" alt="logo" />\n-        <p>\n-          Edit <code>src/App.tsx</code> and save to reload.\n-        </p>\n-        <a\n-          className="App-link"\n-          href="https://reactjs.org"\n-          target="_blank"\n-          rel="noopener noreferrer"\n-        >\n-          Learn React\n-        </a>\n-      </header>\n+      <Hello />\n    </div>\n  );\n};\n\nexport default App;\n')),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},"You will get the following TypeScript error.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Property 'name' is missing in type '{}' but required in type 'Props'.\n")),(0,r.kt)("ol",{start:5},(0,r.kt)("li",{parentName:"ol"},"Add ",(0,r.kt)("inlineCode",{parentName:"li"},"name")," as a ",(0,r.kt)("inlineCode",{parentName:"li"},"prop"),".")),(0,r.kt)("h4",{id:"srcapptsx-1"},(0,r.kt)("inlineCode",{parentName:"h4"},"src\\App.tsx")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-diff"},'...\n- <Hello ></Hello>\n+ <Hello name="David"></Hello>\n...\n')),(0,r.kt)("ol",{start:6},(0,r.kt)("li",{parentName:"ol"},"The compiler error will go away and following should be displayed in the browser.")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Hello David!\n")),(0,r.kt)("ol",{start:7},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Enthusiasm level is an nullable parameter so we did not have to set it yet. Set enthusiasm level as follows and observe the results:"),(0,r.kt)("ol",{parentName:"li"},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},'<Hello name="David" enthusiasmLevel="3"></Hello>'),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Type 'string' is not assignable to type 'number | undefined'"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},'<Hello name="David" enthusiasmLevel={3}></Hello>'),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Hello David!!!"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},'<Hello name="David" enthusiasmLevel={0}></Hello>'),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"Error: You could be a little more enthusiastic. :D"))),(0,r.kt)("li",{parentName:"ol"},"Change it back so the error goes away: ",(0,r.kt)("inlineCode",{parentName:"li"},'<Hello name="David" enthusiasmLevel={3}></Hello>'))))),(0,r.kt)("h3",{id:"class-component"},"Class Component"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Replace ",(0,r.kt)("inlineCode",{parentName:"li"},"Hello")," with a similar implementation that uses a class component.")),(0,r.kt)("h4",{id:"srchellotsx-1"},(0,r.kt)("inlineCode",{parentName:"h4"},"src\\Hello.tsx")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'import React from "react";\n\nexport interface Props {\n  name: string;\n  enthusiasmLevel?: number;\n}\n\nclass Hello extends React.Component<Props> {\n  render() {\n    const { name, enthusiasmLevel = 1 } = this.props;\n\n    if (enthusiasmLevel <= 0) {\n      throw new Error("You could be a little more enthusiastic. :D");\n    }\n\n    return (\n      <div className="hello">\n        <div className="greeting">\n          Hello {name + getExclamationMarks(enthusiasmLevel)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Hello;\n\n// helpers\n\nfunction getExclamationMarks(numChars: number) {\n  return Array(numChars + 1).join("!");\n}\n')),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Verify the component works as it did before.")),(0,r.kt)("h2",{id:"state"},"State"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Replace ",(0,r.kt)("inlineCode",{parentName:"li"},"Hello")," with the new implementation below that stores enthusiasm level as ",(0,r.kt)("inlineCode",{parentName:"li"},"state"),".")),(0,r.kt)("h4",{id:"srchellotsx-2"},(0,r.kt)("inlineCode",{parentName:"h4"},"src\\Hello.tsx")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'import React from "react";\n\nexport interface Props {\n  name: string;\n  enthusiasmLevel?: number;\n}\n\ninterface State {\n  currentEnthusiasm: number;\n}\n\nclass Hello extends React.Component<Props, State> {\n  state = { currentEnthusiasm: this.props.enthusiasmLevel || 1 };\n\n  onIncrement = () => {\n    this.updateEnthusiasm(1);\n  };\n  onDecrement = () => {\n    this.updateEnthusiasm(-1);\n  };\n\n  render() {\n    const { name } = this.props;\n\n    if (this.state.currentEnthusiasm <= 0) {\n      throw new Error("You could be a little more enthusiastic. :D");\n    }\n\n    return (\n      <div className="hello">\n        <div className="greeting">\n          Hello {name + getExclamationMarks(this.state.currentEnthusiasm)}\n        </div>\n        <button onClick={this.onDecrement}>-</button>\n        <button onClick={this.onIncrement}>+</button>\n      </div>\n    );\n  }\n\n  updateEnthusiasm(change: number) {\n    this.setState((currentState) => {\n      return { currentEnthusiasm: currentState.currentEnthusiasm + change };\n    });\n  }\n}\n\nexport default Hello;\n\nfunction getExclamationMarks(numChars: number) {\n  return Array(numChars + 1).join("!");\n}\n')),(0,r.kt)("ol",{start:2},(0,r.kt)("li",{parentName:"ol"},"Notice that ",(0,r.kt)("inlineCode",{parentName:"li"},"state")," is the second type parameter being passed when the class is constructed.")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"You can leave ",(0,r.kt)("inlineCode",{parentName:"p"},"state")," off if the component doesn't have local state.")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"class Hello extends React.Component<Props>")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"class Hello extends React.Component<Props, State>"))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"If you have state but no props use one of the following syntaxes.")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"class Hello extends React.Component<object, State>")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"class Hello extends React.Component<any, State>")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"class Hello extends React.Component<{}, State>"))),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"Set ",(0,r.kt)("inlineCode",{parentName:"li"},"enthusiasmLevel")," as a ",(0,r.kt)("inlineCode",{parentName:"li"},"prop"),".")),(0,r.kt)("h4",{id:"srcapptsx-2"},(0,r.kt)("inlineCode",{parentName:"h4"},"src\\App.tsx")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-diff"},"import React from 'react';\nimport './App.css';\nimport Hello from './Hello';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Hello name=\"Evis\"\n+      enthusiasmLevel={2}\n      ></Hello>\n    </div>\n  );\n};\n\nexport default App;\n\n")),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},"Verify the component is working.")),(0,r.kt)("h2",{id:"event-handlers"},"Event Handlers"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Replace ",(0,r.kt)("inlineCode",{parentName:"li"},"Hello")," with the new implementation below that strongly types the event object.")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"This enables autocomplete for methods or properties on the event and type errors when you attempt to access a non-existent property or invoke an invalid function.")),(0,r.kt)("h4",{id:"srchellotsx-3"},(0,r.kt)("inlineCode",{parentName:"h4"},"src\\Hello.tsx")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'import React, { SyntheticEvent } from "react";\n\nexport interface Props {\n  name: string;\n  enthusiasmLevel?: number;\n}\n\ninterface State {\n  currentEnthusiasm: number;\n}\n\nclass Hello extends React.Component<Props, State> {\n  state = { currentEnthusiasm: this.props.enthusiasmLevel || 1 };\n\n  onIncrement = (event: SyntheticEvent) => {\n    console.log(event);\n    this.updateEnthusiasm(1);\n  };\n  onDecrement = (event: SyntheticEvent) => {\n    console.log(event.target);\n    this.updateEnthusiasm(-1);\n  };\n\n  render() {\n    const { name } = this.props;\n\n    if (this.state.currentEnthusiasm <= 0) {\n      throw new Error("You could be a little more enthusiastic. :D");\n    }\n\n    return (\n      <div className="hello">\n        <div className="greeting">\n          Hello {name + getExclamationMarks(this.state.currentEnthusiasm)}\n        </div>\n        <button onClick={this.onDecrement}>-</button>\n        <button onClick={this.onIncrement}>+</button>\n      </div>\n    );\n  }\n\n  updateEnthusiasm(change: number) {\n    this.setState((currentState) => {\n      return { currentEnthusiasm: currentState.currentEnthusiasm + change };\n    });\n  }\n}\n\nexport default Hello;\n\nfunction getExclamationMarks(numChars: number) {\n  return Array(numChars + 1).join("!");\n}\n')),(0,r.kt)("h2",{id:"reference"},"Reference"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://medium.com/@rossbulat/how-to-use-typescript-with-react-and-redux-a118b1e02b76"},"How to Use TypeScript with React & Redux")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/Microsoft/TypeScript-React-Starter#typescript-react-starter"},"Microsoft Tutorial on React & Redux using TypeScript")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/typescript-cheatsheets/react-typescript-cheatsheet#reacttypescript-cheatsheets"},"React TypeScript Cheatsheet"))))}u.isMDXComponent=!0}}]);