"use strict";(self.webpackChunkreact=self.webpackChunkreact||[]).push([[9678],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>y});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=p(n),u=r,y=d["".concat(s,".").concat(u)]||d[u]||m[u]||l;return n?a.createElement(y,o(o({ref:t},c),{},{components:n})):a.createElement(y,o({ref:t},c))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=u;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[d]="string"==typeof e?e:r,o[1]=i;for(var p=2;p<l;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1790:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const l={id:"A9-Styling",title:"Styling",sidebar_label:"Styling",slug:"/styles"},o=void 0,i={unversionedId:"A9-Styling",id:"A9-Styling",title:"Styling",description:"Components can be styled using CSS classes or inline styles as you would in when using plain HTML and CSS without React.",source:"@site/docs/A9-Styling.md",sourceDirName:".",slug:"/styles",permalink:"/docs/styles",draft:!1,tags:[],version:"current",frontMatter:{id:"A9-Styling",title:"Styling",sidebar_label:"Styling",slug:"/styles"}},s={},p=[{value:"Class",id:"class",level:2},{value:"Style",id:"style",level:2},{value:"Classnames Library",id:"classnames-library",level:2},{value:"CSS in JS",id:"css-in-js",level:2},{value:"What is CSS-in-JS?",id:"what-is-css-in-js",level:4},{value:"CSS-in-JS Libraries",id:"css-in-js-libraries",level:4},{value:"Styled Components",id:"styled-components",level:2},{value:"Reference",id:"reference",level:2}],c={toc:p},d="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Components can be styled using CSS classes or inline styles as you would in when using plain HTML and CSS without React."),(0,r.kt)("h2",{id:"class"},"Class"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"className")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"use ",(0,r.kt)("inlineCode",{parentName:"li"},"className")," not ",(0,r.kt)("inlineCode",{parentName:"li"},"class")),(0,r.kt)("li",{parentName:"ul"},"pass a string to ",(0,r.kt)("inlineCode",{parentName:"li"},"className")),(0,r.kt)("li",{parentName:"ul"},"it is common for CSS classes to be dynamically added or removed based on data in the component props or state"),(0,r.kt)("li",{parentName:"ul"},"vanilla JavaScript can be used to dynamically build the string of CSS classes")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create the file ",(0,r.kt)("inlineCode",{parentName:"p"},"styles.css"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Add the following styles:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-css"},".container {\n  width: 50rem;\n}\n\n.alert {\n  position: relative;\n  padding: 0.75rem 1.25rem;\n  margin-bottom: 1rem;\n  border: 1px solid transparent;\n  border-radius: 0.25rem;\n}\n\n.alert-danger {\n  color: #721c24;\n  background-color: #f8d7da;\n  border-color: #f5c6cb;\n}\n\n.alert-success {\n  color: #155724;\n  background-color: #d4edda;\n  border-color: #c3e6cb;\n}\n\n.alert-warning {\n  color: #856404;\n  background-color: #fff3cd;\n  border-color: #ffeeba;\n}\n\n.alert-info {\n  color: #0c5460;\n  background-color: #d1ecf1;\n  border-color: #bee5eb;\n}\n")))),(0,r.kt)("p",null,"3) Add a css link tag to the ",(0,r.kt)("inlineCode",{parentName:"p"},"index.html")," page"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-diff"},'<head>\n<meta charset="UTF-8" />\n<meta name="viewport" content="width=device-width, initial-scale=1.0" />\n<meta http-equiv="X-UA-Compatible" content="ie=edge" />\n+    <link rel="stylesheet" href="styles.css" />\n<title></title>\n</head>\n')),(0,r.kt)("ol",{start:4},(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create an ",(0,r.kt)("inlineCode",{parentName:"p"},"Alert")," component in ",(0,r.kt)("inlineCode",{parentName:"p"},"main.js")," and display the different kinds of alerts"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},'function Alert() {\n  return (\n    <div className="container">\n      <div className="alert alert-danger">danger</div>\n      <div className="alert alert-warning">warning</div>\n      <div className="alert alert-success">success</div>\n      <div className="alert alert-info">info</div>\n    </div>\n  );\n}\n\nReactDOM.createRoot(document.getElementById("root")).render(<Alert />);\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Modify the component to take an ",(0,r.kt)("inlineCode",{parentName:"p"},"Alert")," ",(0,r.kt)("inlineCode",{parentName:"p"},"type")," prop to dynamically set the type of alert"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},'function Alert({ type = "info" }) {\n  const alertClasses = `alert alert-${type}`;\n  return (\n    <div className="container">\n      <div className={alertClasses}>This is a message.</div>\n    </div>\n  );\n}\n\nReactDOM.createRoot(document.getElementById("root")).render(\n  <Alert type="danger" />\n);\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Set the alert type as shown above and confirm it is working")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Remove the ",(0,r.kt)("inlineCode",{parentName:"p"},"type")," prop from ",(0,r.kt)("inlineCode",{parentName:"p"},'<Alert type="danger" />'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Verify the alert type correctly defaults to the ",(0,r.kt)("inlineCode",{parentName:"p"},"info")," type"))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"If you often find yourself writing code to build up a string of CSS classes the ",(0,r.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/classnames#usage-with-reactjs"},"classnames")," package can simplify it. Alternatively, you could use one of the CSS-in-JS libraries below if you prefer.")),(0,r.kt)("h2",{id:"style"},"Style"),(0,r.kt)("p",null,"Using the ",(0,r.kt)("inlineCode",{parentName:"p"},"style")," attribute as the primary means of styling elements is generally not recommended. In most cases, ",(0,r.kt)("inlineCode",{parentName:"p"},"className")," should be used to reference classes defined in an external CSS stylesheet. ",(0,r.kt)("inlineCode",{parentName:"p"},"style")," is most often used in React applications to add dynamically-computed styles at render time."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"Are inline styles bad?"),(0,r.kt)("ul",{parentName:"blockquote"},(0,r.kt)("li",{parentName:"ul"},"CSS classes are generally better for performance than inline styles."))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"style")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"accepts a JavaScript object (not a ; delimited string like HTML)"),(0,r.kt)("li",{parentName:"ul"},"the object ",(0,r.kt)("inlineCode",{parentName:"li"},"properties")," are ",(0,r.kt)("inlineCode",{parentName:"li"},"camelCased")," instead of ",(0,r.kt)("inlineCode",{parentName:"li"},"kebab-cased")),(0,r.kt)("li",{parentName:"ul"},"consistent with the DOM property ",(0,r.kt)("inlineCode",{parentName:"li"},"style")," (not the attribute)"),(0,r.kt)("li",{parentName:"ul"},"more efficient"),(0,r.kt)("li",{parentName:"ul"},"prevents XSS security holes"),(0,r.kt)("li",{parentName:"ul"},"not auto-prefixed"),(0,r.kt)("li",{parentName:"ul"},"to support older browsers you need to supply the corresponding style properties")),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Override the styles from the CSS Classes in the previous example with inline styles"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-diff"},"function Alert({ type = 'info' }) {\nconst alertClasses = `alert alert-${type}`;\nreturn (\n    <div className=\"container\">\n    <div\n        className={alertClasses}\n+        style={{ backgroundColor: 'fuchsia', color: 'white', width: 50 }}\n    >\n        This is a message.\n    </div>\n    </div>\n);\n}\n\nReactDOM.createRoot(document.getElementById('root')).render(<Alert type=\"danger\" />);\n")))),(0,r.kt)("h2",{id:"classnames-library"},"Classnames Library"),(0,r.kt)("p",null,"A simple JavaScript utility for conditionally joining className(s) together."),(0,r.kt)("p",null,"This library used to be part of React and has been pulled out into a library that can be extremely helpful."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/classnames#usage-with-reactjs"},"Adding and Removing CSS Classes Library"))),(0,r.kt)("h2",{id:"css-in-js"},"CSS in JS"),(0,r.kt)("h4",{id:"what-is-css-in-js"},"What is CSS-in-JS?"),(0,r.kt)("p",null,"\u201cCSS-in-JS\u201d refers to a pattern where CSS is composed using JavaScript instead of defined in external files."),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Note that this functionality is not a part of React, but provided by third-party libraries.")," React does not have an opinion about how styles are defined; if in doubt, a good starting point is to define your styles in a separate ",(0,r.kt)("inlineCode",{parentName:"p"},"*.css")," file as usual and refer to them using ",(0,r.kt)("inlineCode",{parentName:"p"},"className"),"."),(0,r.kt)("h4",{id:"css-in-js-libraries"},"CSS-in-JS Libraries"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.styled-components.com/"},"styled components")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://emotion.sh"},"emotion"))),(0,r.kt)("p",null,"Read a comparison of CSS-in-JS libraries ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/MicheleBertoli/css-in-js"},"here"),"."),(0,r.kt)("h2",{id:"styled-components"},"Styled Components"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Installation"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-sh"},"npm install styled-components\n")),(0,r.kt)("h4",{parentName:"li",id:"indexhtml"},(0,r.kt)("inlineCode",{parentName:"h4"},"index.html")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-html"},'<body>\n  <div id="root"></div>\n  <script src="/node_modules/react/umd/react.development.js"><\/script>\n  <script src="/node_modules/react-dom/umd/react-dom.development.js"><\/script>\n  <script src="/node_modules/react-is/umd/react-is.development.js"><\/script>\n  <script src="/node_modules/@babel/standalone/babel.min.js"><\/script>\n  <script src="/node_modules/styled-components/dist/styled-components.min.js"><\/script>\n  <script type="text/babel" src="/main.js"><\/script>\n</body>\n')),(0,r.kt)("h4",{parentName:"li",id:"mainjs"},(0,r.kt)("inlineCode",{parentName:"h4"},"main.js")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},"const { styled } = window;\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Before styled components. Global styles in ",(0,r.kt)("inlineCode",{parentName:"p"},"styles.css")),(0,r.kt)("h4",{parentName:"li",id:"mainjs-1"},(0,r.kt)("inlineCode",{parentName:"h4"},"main.js")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},'function Alert() {\n  return <div className="alert alert-danger">danger</div>;\n}\n\nReactDOM.createRoot(document.getElementById("root")).render(<Alert />);\n')),(0,r.kt)("h4",{parentName:"li",id:"stylescss"},(0,r.kt)("inlineCode",{parentName:"h4"},"styles.css")),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-css"},".alert {\n  position: relative;\n  padding: 0.75rem 1.25rem;\n  margin-bottom: 1rem;\n  border: 1px solid transparent;\n  border-radius: 0.25rem;\n}\n\n.alert-danger {\n  color: #721c24;\n  background-color: #f8d7da;\n  border-color: #f5c6cb;\n}\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"With styled components"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const { styled } = window;\nconst StyledAlert = styled.div`\n  position: relative;\n  padding: 0.75rem 1.25rem;\n  margin-bottom: 1rem;\n  border: 1px solid transparent;\n  border-radius: 0.25rem;\n`;\n\nconst StyledAlertDanger = styled(StyledAlert)`\n  color: #721c24;\n  background-color: #f8d7da;\n  border-color: #f5c6cb;\n`;\n\nfunction Alert() {\n  return <StyledAlertDanger>danger</StyledAlertDanger>;\n}\n\nReactDOM.createRoot(document.getElementById("root")).render(<Alert />);\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"With variants:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const { styled } = window;\n\nconst StyledAlert = styled.div`\n  position: relative;\n  padding: 0.75rem 1.25rem;\n  margin-bottom: 1rem;\n  border: 1px solid transparent;\n  border-radius: 0.25rem;\n`;\n\nconst StyledAlertDanger = styled(StyledAlert)`\n  color: #721c24;\n  background-color: #f8d7da;\n  border-color: #f5c6cb;\n`;\n\nconst StyledAlertInfo = styled(StyledAlert)`\n  color: #0c5460;\n  background-color: #d1ecf1;\n  border-color: #bee5eb;\n`;\n\nfunction Alert() {\n  return <StyledAlertInfo>danger</StyledAlertInfo>;\n}\n\nReactDOM.createRoot(document.getElementById("root")).render(<Alert />);\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"With variants driven by props:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js"},'const StyledAlertVariant = styled(StyledAlert)`\n  color: ${(props) => props.color};\n  background-color: ${(props) => props.backgroundColor};\n  border-color: ${(props) => props.borderColor};\n`;\n\nfunction Alert() {\n  return (\n    <StyledAlertVariant\n      color="white"\n      backgroundColor="lightblue"\n      borderColor="black"\n    >\n      variant\n    </StyledAlertVariant>\n  );\n}\n\nReactDOM.createRoot(document.getElementById("root")).render(<Alert />);\n')))),(0,r.kt)("h2",{id:"reference"},"Reference"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://reactjs.org/docs/faq-styling.html"},"See also FAQ: Styling and CSS")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://reactjs.org/docs/dom-elements.html#style"},"style attribute")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.robinwieruch.de/react-css-styling"},"How to CSS Style in React")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://styled-components.com/docs/basics#installation"},"Styled Components: Installation")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://styled-components.com/docs/basics#getting-started"},"Styled Components: Getting Started "))))}m.isMDXComponent=!0}}]);