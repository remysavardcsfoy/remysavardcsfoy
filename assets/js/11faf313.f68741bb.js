"use strict";(self.webpackChunkreact=self.webpackChunkreact||[]).push([[8197],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>m});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=s(n),h=i,m=u["".concat(p,".").concat(h)]||u[h]||c[h]||r;return n?a.createElement(m,o(o({ref:t},d),{},{components:n})):a.createElement(m,o({ref:t},d))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=h;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:i,o[1]=l;for(var s=2;s<r;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}h.displayName="MDXCreateElement"},2344:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>l,toc:()=>s});var a=n(7462),i=(n(7294),n(3905));const r={title:"Build & Deploy",sidebar_label:"Build & Deploy",slug:"/build-deploy"},o=void 0,l={unversionedId:"BuildDeploy",id:"BuildDeploy",title:"Build & Deploy",description:"Build",source:"@site/docs/17-BuildDeploy.md",sourceDirName:".",slug:"/build-deploy",permalink:"/docs/build-deploy",draft:!1,tags:[],version:"current",sidebarPosition:17,frontMatter:{title:"Build & Deploy",sidebar_label:"Build & Deploy",slug:"/build-deploy"}},p={},s=[{value:"Build",id:"build",level:2},{value:"Deploy",id:"deploy",level:2},{value:"Static Server",id:"static-server",level:2},{value:"Other Solutions",id:"other-solutions",level:2},{value:"Serving Apps with Client-Side Routing",id:"serving-apps-with-client-side-routing",level:2},{value:"Building for Relative Paths",id:"building-for-relative-paths",level:2},{value:"Serving the Same Build from Different Paths",id:"serving-the-same-build-from-different-paths",level:3},{value:"Customizing Environment Variables for Arbitrary Build Environments",id:"customizing-environment-variables-for-arbitrary-build-environments",level:2},{value:"Static File Caching",id:"static-file-caching",level:2},{value:"Reference",id:"reference",level:2}],d={toc:s},u="wrapper";function c(e){let{components:t,...n}=e;return(0,i.kt)(u,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"build"},"Build"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"npm run build")," creates a ",(0,i.kt)("inlineCode",{parentName:"p"},"build")," directory with a production build of your app. Inside the ",(0,i.kt)("inlineCode",{parentName:"p"},"build/static")," directory will be your JavaScript and CSS files. Each filename inside of ",(0,i.kt)("inlineCode",{parentName:"p"},"build/static")," will contain a unique hash of the file contents. This hash in the file name enables ",(0,i.kt)("a",{parentName:"p",href:"#static-file-caching"},"long term caching techniques"),"."),(0,i.kt)("p",null,"When running a production build of freshly created Create React App application, there are a number of ",(0,i.kt)("inlineCode",{parentName:"p"},".js")," files (called ",(0,i.kt)("em",{parentName:"p"},"chunks"),") that are generated and placed in the ",(0,i.kt)("inlineCode",{parentName:"p"},"build/static/js")," directory:"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"main.[hash].chunk.js")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"This is your ",(0,i.kt)("em",{parentName:"li"},"application")," code. ",(0,i.kt)("inlineCode",{parentName:"li"},"App.js"),", etc.")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"[number].[hash].chunk.js")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"These files can either be ",(0,i.kt)("em",{parentName:"li"},"vendor")," code, or ",(0,i.kt)("strong",{parentName:"li"},"code splitting chunks"),". ",(0,i.kt)("em",{parentName:"li"},"Vendor")," code includes modules that you've imported from within ",(0,i.kt)("inlineCode",{parentName:"li"},"node_modules"),". One of the potential advantages with splitting your ",(0,i.kt)("em",{parentName:"li"},"vendor")," and ",(0,i.kt)("em",{parentName:"li"},"application")," code is to enable ",(0,i.kt)("a",{parentName:"li",href:"#static-file-caching"},"long term caching techniques")," to improve application loading performance. Since ",(0,i.kt)("em",{parentName:"li"},"vendor")," code tends to change less often than the actual ",(0,i.kt)("em",{parentName:"li"},"application")," code, the browser will be able to cache them separately, and won't re-download them each time the app code changes.")),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"runtime-main.[hash].js")),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"This is a small chunk of ",(0,i.kt)("a",{parentName:"li",href:"https://webpack.js.org/configuration/optimization/#optimization-runtimechunk"},"webpack runtime")," logic which is used to load and run your application. The contents of this will be embedded in your ",(0,i.kt)("inlineCode",{parentName:"li"},"build/index.html")," file by default to save an additional network request. You can opt out of this by specifying ",(0,i.kt)("inlineCode",{parentName:"li"},"INLINE_RUNTIME_CHUNK=false"),", which will load this chunk instead of embedding it in your ",(0,i.kt)("inlineCode",{parentName:"li"},"index.html"),".")),(0,i.kt)("p",null,"If you're using ",(0,i.kt)("strong",{parentName:"p"},"code splitting")," to split up your application, this will create additional chunks in the ",(0,i.kt)("inlineCode",{parentName:"p"},"build/static")," folder as well."),(0,i.kt)("h2",{id:"deploy"},"Deploy"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"npm run build")," creates a ",(0,i.kt)("inlineCode",{parentName:"p"},"build")," directory with a production build of your app. Set up your favorite HTTP server so that a visitor to your site is served ",(0,i.kt)("inlineCode",{parentName:"p"},"index.html"),", and requests to static paths like ",(0,i.kt)("inlineCode",{parentName:"p"},"/static/js/main.<hash>.js")," are served with the contents of the ",(0,i.kt)("inlineCode",{parentName:"p"},"/static/js/main.<hash>.js")," file. For more information see the ",(0,i.kt)("a",{parentName:"p",href:"https://facebook.github.io/create-react-app/docs/production-build"},"production build")," section of the Create React App documentation."),(0,i.kt)("h2",{id:"static-server"},"Static Server"),(0,i.kt)("p",null,"For environments using ",(0,i.kt)("a",{parentName:"p",href:"https://nodejs.org/"},"Node"),", the easiest way to handle this would be to install ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/zeit/serve"},"serve")," and let it handle the rest:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"npm install -g serve\nserve -s build\n")),(0,i.kt)("p",null,"The last command shown above will serve your static site on the port ",(0,i.kt)("strong",{parentName:"p"},"5000"),". Like many of ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/zeit/serve"},"serve"),"\u2019s internal settings, the port can be adjusted using the ",(0,i.kt)("inlineCode",{parentName:"p"},"-l")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"--listen")," flags:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"serve -s build -l 4000\n")),(0,i.kt)("p",null,"Run this command to get a full list of the options available:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"serve -h\n")),(0,i.kt)("h2",{id:"other-solutions"},"Other Solutions"),(0,i.kt)("p",null,"You don\u2019t necessarily need a static server in order to run a Create React App project in production. It works just as fine integrated into an existing dynamic one."),(0,i.kt)("p",null,"Here\u2019s a programmatic example using ",(0,i.kt)("a",{parentName:"p",href:"https://nodejs.org/"},"Node")," and ",(0,i.kt)("a",{parentName:"p",href:"https://expressjs.com/"},"Express"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"const express = require('express');\nconst path = require('path');\nconst app = express();\n\napp.use(express.static(path.join(__dirname, 'build')));\n\napp.get('/', function (req, res) {\n  res.sendFile(path.join(__dirname, 'build', 'index.html'));\n});\n\napp.listen(9000);\n")),(0,i.kt)("p",null,"The choice of your server software isn\u2019t important either. Since Create React App is completely platform-agnostic, there\u2019s no need to explicitly use Node."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"build")," folder with static assets is the only output produced by Create React App."),(0,i.kt)("p",null,"However this is not quite enough if you use client-side routing. Read the next section if you want to support URLs like ",(0,i.kt)("inlineCode",{parentName:"p"},"/todos/42")," in your single-page app."),(0,i.kt)("h2",{id:"serving-apps-with-client-side-routing"},"Serving Apps with Client-Side Routing"),(0,i.kt)("p",null,"If you use routers that use the HTML5 ",(0,i.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/API/History_API#Adding_and_modifying_history_entries"},(0,i.kt)("inlineCode",{parentName:"a"},"pushState")," history API")," under the hood (for example, ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/ReactTraining/react-router"},"React Router")," with ",(0,i.kt)("inlineCode",{parentName:"p"},"browserHistory"),"), many static file servers will fail. For example, if you used React Router with a route for ",(0,i.kt)("inlineCode",{parentName:"p"},"/todos/42"),", the development server will respond to ",(0,i.kt)("inlineCode",{parentName:"p"},"localhost:3000/todos/42")," properly, but an Express serving a production build as above will not."),(0,i.kt)("p",null,"This is because when there is a fresh page load for a ",(0,i.kt)("inlineCode",{parentName:"p"},"/todos/42"),", the server looks for the file ",(0,i.kt)("inlineCode",{parentName:"p"},"build/todos/42")," and does not find it. The server needs to be configured to respond to a request to ",(0,i.kt)("inlineCode",{parentName:"p"},"/todos/42")," by serving ",(0,i.kt)("inlineCode",{parentName:"p"},"index.html"),". For example, we can amend our Express example above to serve ",(0,i.kt)("inlineCode",{parentName:"p"},"index.html")," for any unknown paths:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-diff"}," app.use(express.static(path.join(__dirname, 'build')));\n\n-app.get('/', function (req, res) {\n+app.get('/*', function (req, res) {\n   res.sendFile(path.join(__dirname, 'build', 'index.html'));\n });\n")),(0,i.kt)("p",null,"If you\u2019re using ",(0,i.kt)("a",{parentName:"p",href:"https://httpd.apache.org/"},"Apache HTTP Server"),", you need to create a ",(0,i.kt)("inlineCode",{parentName:"p"},".htaccess")," file in the ",(0,i.kt)("inlineCode",{parentName:"p"},"public")," folder that looks like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"    Options -MultiViews\n    RewriteEngine On\n    RewriteCond %{REQUEST_FILENAME} !-f\n    RewriteRule ^ index.html [QSA,L]\n")),(0,i.kt)("p",null,"It will get copied to the ",(0,i.kt)("inlineCode",{parentName:"p"},"build")," folder when you run ",(0,i.kt)("inlineCode",{parentName:"p"},"npm run build"),"."),(0,i.kt)("p",null,"If you\u2019re using ",(0,i.kt)("a",{parentName:"p",href:"https://tomcat.apache.org/"},"Apache Tomcat"),", you need to follow ",(0,i.kt)("a",{parentName:"p",href:"https://stackoverflow.com/a/41249464/4878474"},"this Stack Overflow answer"),"."),(0,i.kt)("p",null,"Now requests to ",(0,i.kt)("inlineCode",{parentName:"p"},"/todos/42")," will be handled correctly both in development and in production."),(0,i.kt)("h2",{id:"building-for-relative-paths"},"Building for Relative Paths"),(0,i.kt)("p",null,"By default, Create React App produces a build assuming your app is hosted at the server root."),(0,i.kt)("p",null,"To override this, specify the ",(0,i.kt)("inlineCode",{parentName:"p"},"homepage")," in your ",(0,i.kt)("inlineCode",{parentName:"p"},"package.json"),", for example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'  "homepage": "http://mywebsite.com/relativepath",\n')),(0,i.kt)("p",null,"This will let Create React App correctly infer the root path to use in the generated HTML file."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Note"),": If you are using ",(0,i.kt)("inlineCode",{parentName:"p"},"react-router@^4"),", you can root ",(0,i.kt)("inlineCode",{parentName:"p"},"<Link>"),"s using the ",(0,i.kt)("inlineCode",{parentName:"p"},"basename")," prop on any ",(0,i.kt)("inlineCode",{parentName:"p"},"<Router>"),".",(0,i.kt)("br",null),"\nMore information ",(0,i.kt)("a",{parentName:"p",href:"https://reacttraining.com/react-router/web/api/BrowserRouter/basename-string"},"here"),".",(0,i.kt)("br",null)),(0,i.kt)("br",null),"For example:",(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'<BrowserRouter basename="/calendar"/>\n<Link to="/today"/> // renders <a href="/calendar/today">\n')),(0,i.kt)("h3",{id:"serving-the-same-build-from-different-paths"},"Serving the Same Build from Different Paths"),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Note: this feature is available with ",(0,i.kt)("inlineCode",{parentName:"p"},"react-scripts@0.9.0")," and higher.")),(0,i.kt)("p",null,"If you are not using the HTML5 ",(0,i.kt)("inlineCode",{parentName:"p"},"pushState")," history API or not using client-side routing at all, it is unnecessary to specify the URL from which your app will be served. Instead, you can put this in your ",(0,i.kt)("inlineCode",{parentName:"p"},"package.json"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-js"},'  "homepage": ".",\n')),(0,i.kt)("p",null,"This will make sure that all the asset paths are relative to ",(0,i.kt)("inlineCode",{parentName:"p"},"index.html"),". You will then be able to move your app from ",(0,i.kt)("inlineCode",{parentName:"p"},"http://mywebsite.com")," to ",(0,i.kt)("inlineCode",{parentName:"p"},"http://mywebsite.com/relativepath")," or even ",(0,i.kt)("inlineCode",{parentName:"p"},"http://mywebsite.com/relative/path")," without having to rebuild it."),(0,i.kt)("h2",{id:"customizing-environment-variables-for-arbitrary-build-environments"},"Customizing Environment Variables for Arbitrary Build Environments"),(0,i.kt)("p",null,"You can create an arbitrary build environment by creating a custom ",(0,i.kt)("inlineCode",{parentName:"p"},".env")," file and loading it using ",(0,i.kt)("a",{parentName:"p",href:"https://www.npmjs.com/package/env-cmd"},"env-cmd"),"."),(0,i.kt)("p",null,"For example, to create a build environment for a staging environment:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Create a file called ",(0,i.kt)("inlineCode",{parentName:"li"},".env.staging")),(0,i.kt)("li",{parentName:"ol"},"Set environment variables as you would any other ",(0,i.kt)("inlineCode",{parentName:"li"},".env")," file (e.g. ",(0,i.kt)("inlineCode",{parentName:"li"},"REACT_APP_API_URL=http://api-staging.example.com"),")"),(0,i.kt)("li",{parentName:"ol"},"Install ",(0,i.kt)("a",{parentName:"li",href:"https://www.npmjs.com/package/env-cmd"},"env-cmd"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"$ npm install env-cmd --save\n$ # or\n$ yarn add env-cmd\n"))),(0,i.kt)("li",{parentName:"ol"},"Add a new script to your ",(0,i.kt)("inlineCode",{parentName:"li"},"package.json"),", building with your new environment:",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "scripts": {\n    "build:staging": "env-cmd -f .env.staging npm run build"\n  }\n}\n')))),(0,i.kt)("p",null,"Now you can run ",(0,i.kt)("inlineCode",{parentName:"p"},"npm run build:staging")," to build with the staging environment config.\nYou can specify other environments in the same way."),(0,i.kt)("p",null,"Variables in ",(0,i.kt)("inlineCode",{parentName:"p"},".env.production")," will be used as fallback because ",(0,i.kt)("inlineCode",{parentName:"p"},"NODE_ENV")," will always be set to ",(0,i.kt)("inlineCode",{parentName:"p"},"production")," for a build."),(0,i.kt)("h2",{id:"static-file-caching"},"Static File Caching"),(0,i.kt)("p",null,"Each file inside of the ",(0,i.kt)("inlineCode",{parentName:"p"},"build/static")," directory will have a unique hash appended to the filename that is generated based on the contents of the file, which allows you to use ",(0,i.kt)("a",{parentName:"p",href:"https://developers.google.com/web/fundamentals/performance/optimizing-content-efficiency/http-caching#invalidating_and_updating_cached_responses"},"aggressive caching techniques")," to avoid the browser re-downloading your assets if the file contents haven't changed. If the contents of a file changes in a subsequent build, the filename hash that is generated will be different."),(0,i.kt)("p",null,"To deliver the best performance to your users, it's best practice to specify a ",(0,i.kt)("inlineCode",{parentName:"p"},"Cache-Control")," header for ",(0,i.kt)("inlineCode",{parentName:"p"},"index.html"),", as well as the files within ",(0,i.kt)("inlineCode",{parentName:"p"},"build/static"),". This header allows you to control the length of time that the browser as well as CDNs will cache your static assets. If you aren't familiar with what ",(0,i.kt)("inlineCode",{parentName:"p"},"Cache-Control")," does, see ",(0,i.kt)("a",{parentName:"p",href:"https://jakearchibald.com/2016/caching-best-practices/"},"this article")," for a great introduction."),(0,i.kt)("p",null,"Using ",(0,i.kt)("inlineCode",{parentName:"p"},"Cache-Control: max-age=31536000")," for your ",(0,i.kt)("inlineCode",{parentName:"p"},"build/static")," assets, and ",(0,i.kt)("inlineCode",{parentName:"p"},"Cache-Control: no-cache")," for everything else is a safe and effective starting point that ensures your user's browser will always check for an updated ",(0,i.kt)("inlineCode",{parentName:"p"},"index.html")," file, and will cache all of the ",(0,i.kt)("inlineCode",{parentName:"p"},"build/static")," files for one year. Note that you can use the one year expiration on ",(0,i.kt)("inlineCode",{parentName:"p"},"build/static")," safely because the file contents hash is embedded into the filename."),(0,i.kt)("h2",{id:"reference"},"Reference"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://facebook.github.io/create-react-app/docs/production-build"},"Create React App Production Builds")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"https://facebook.github.io/create-react-app/docs/deployment"},"Create React App Deployment"))))}c.isMDXComponent=!0}}]);